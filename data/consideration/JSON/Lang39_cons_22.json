{"projectName":".","variants":[{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":0,"generationNumber":0,"generationTime":0.0,"bases":[],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a87c16d5dfc8148b29acc064c3331542"},"selectionCount":27,"operation":{"parentIds":[],"name":""},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":1,"generationNumber":1,"generationTime":517.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3722,"end":3722}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"553c541e889340e5cd3673315ec99020"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3722,"end":3722}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3719,7 +3719,7 @@\n \n         }\n         int textLength \u003d text.length();\n-        for (int i \u003d start; i \u003c textLength; i++) {\n+        for (int i \u003d start;; i++) {\n             buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":2,"generationNumber":1,"generationTime":292.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f21dd75d0ec455c8e95b063b5b5e4815"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,6 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":3,"generationNumber":1,"generationTime":335.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"match || (preserveAllTokens \u0026\u0026 lastMatch)","lineNumberRange":{"start":3645,"end":3646}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"742b4e6887509928a5b7b33e29c97396"},"selectionCount":0,"operation":{"parentIds":[0],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"match || (preserveAllTokens \u0026\u0026 lastMatch)","lineNumberRange":{"start":3645,"end":3646}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3642,8 +3642,7 @@\n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n         for (int i \u003d 0; i \u003c searchLength; i++) {\n-            if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n-                searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n+            if (match || (preserveAllTokens \u0026\u0026 lastMatch)) \n             {\n                 continue;\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":4,"generationNumber":1,"generationTime":60.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":5,"generationNumber":1,"generationTime":3.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"valueToFind \u003d\u003d array[i]","lineNumberRange":{"start":3665,"end":3665}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"valueToFind \u003d\u003d array[i]","lineNumberRange":{"start":3665,"end":3665}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":6,"generationNumber":2,"generationTime":1.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Character.isWhitespace(str.charAt(i))","lineNumberRange":{"start":3700,"end":3700}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Character.isWhitespace(str.charAt(i))","lineNumberRange":{"start":3700,"end":3700}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":7,"generationNumber":2,"generationTime":2.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"whitespace","lineNumberRange":{"start":3712,"end":3712}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"whitespace","lineNumberRange":{"start":3712,"end":3712}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":8,"generationNumber":2,"generationTime":763.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9ef17d24d759eea156a23cbb9ee6614b"},"selectionCount":46,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":9,"generationNumber":2,"generationTime":121.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"861f0dfffaaf60b5bc8c0fe37306b56b"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,9 +3631,6 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n-        boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n-\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":10,"generationNumber":2,"generationTime":108.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3684,"end":3684}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5c1fd8aa12ffa73fae1fb918340e8c21"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3684,"end":3684}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3446,7 +3446,6 @@\n         int increase \u003d replacement.length() - replLength;\n         increase \u003d (increase \u003c 0 ? 0 : increase);\n         increase *\u003d (max \u003c 0 ? 16 : (max \u003e 64 ? 64 : max));\n-        StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n         while (end !\u003d -1) {\n             buf.append(text.substring(start, end)).append(replacement);\n             start \u003d end + replLength;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":11,"generationNumber":3,"generationTime":130.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"start\u003d++i;\n","lineNumberRange":{"start":3648,"end":3648}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"69a095965bac2c1cdbc8f2d297aea228"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"start\u003d++i;\n","lineNumberRange":{"start":3648,"end":3648}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,8 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n+                start \u003d ++i;\n+\t\t\t\tcontinue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":12,"generationNumber":3,"generationTime":800.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1c86512701915c9ffda363b04206f9dc"},"selectionCount":4,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9393939393939394,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":13,"generationNumber":3,"generationTime":213.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end\u003dtemp;\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"56281afa722d569d3cfd0ebe37cc589e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end\u003dtemp;\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3637,6 +3637,7 @@\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n+\t\tend \u003d temp;\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":14,"generationNumber":3,"generationTime":160.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return replace(text,searchString,replacement,1);\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0d1c5e7a2338a576bb2cc18ea058a26d"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return replace(text,searchString,replacement,1);\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3500,6 +3500,7 @@\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n         return replaceEach(text, searchList, replacementList, false, 0);\n+\t\treturn replace(text, searchString, replacement, 1);\n     }\n \n     /**"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":15,"generationNumber":3,"generationTime":27.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c str.length()","lineNumberRange":{"start":3721,"end":3721}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c str.length()","lineNumberRange":{"start":3721,"end":3721}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":16,"generationNumber":4,"generationTime":32.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"bool \u003d\u003d null","lineNumberRange":{"start":3700,"end":3700}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"bool \u003d\u003d null","lineNumberRange":{"start":3700,"end":3700}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":17,"generationNumber":4,"generationTime":135.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"out.close();\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"201cce424de67382997ed1b2f5a60088"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"out.close();\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,7 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n-        int replaceIndex \u003d -1;\n+        out.close();\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":18,"generationNumber":4,"generationTime":143.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"className.endsWith(\"[]\")","lineNumberRange":{"start":3655,"end":3655}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[12],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"className.endsWith(\"[]\")","lineNumberRange":{"start":3655,"end":3655}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":19,"generationNumber":4,"generationTime":119.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(String.format(message,values));\n","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d6873d195de3d63d77138698e3bc47ce"},"selectionCount":0,"operation":{"parentIds":[0],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(String.format(message,values));\n","lineNumberRange":{"start":3723,"end":3723}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3720,7 +3720,7 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n+            throw new IllegalArgumentException(String.format(message, values));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":20,"generationNumber":4,"generationTime":137.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"primitiveWrapperMap.put(Void.TYPE,Void.TYPE);\n","lineNumberRange":{"start":3668,"end":3668}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f1a6f0ceaf2d9dc7ff765b67a082baab"},"selectionCount":0,"operation":{"parentIds":[12],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"primitiveWrapperMap.put(Void.TYPE,Void.TYPE);\n","lineNumberRange":{"start":3668,"end":3668}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -487,6 +487,7 @@\n             return str;\n         }\n         int start \u003d 0;\n+\t\tprimitiveWrapperMap.put(Void.TYPE, Void.TYPE);\n         if (stripChars \u003d\u003d null) {\n             while ((start !\u003d strLen) \u0026\u0026 Character.isWhitespace(str.charAt(start))) {\n                 start++;\n@@ -3435,7 +3436,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":21,"generationNumber":5,"generationTime":149.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c49092209a2fad849377eb4c7b20e956"},"selectionCount":0,"operation":{"parentIds":[12],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3722,7 +3720,6 @@\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }\n-        String result \u003d buf.toString();\n         if (!repeat) {\n             return result;\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":22,"generationNumber":5,"generationTime":587.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"937476fa70bf236becb48c83bc420723"},"selectionCount":9,"operation":{"parentIds":[0],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":23,"generationNumber":5,"generationTime":16.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":24,"generationNumber":5,"generationTime":90.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3727,"end":3727}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8d0258623bc29f83212fb559998caf83"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3727,"end":3727}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3724,7 +3724,8 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n+            i++;\n+\t\t\treturn result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":25,"generationNumber":5,"generationTime":1.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"list.add(new String(c,tokenStart,c.length - tokenStart));\n","lineNumberRange":{"start":3686,"end":3720}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"list.add(new String(c,tokenStart,c.length - tokenStart));\n","lineNumberRange":{"start":3686,"end":3720}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":26,"generationNumber":6,"generationTime":58.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3674,"end":3679}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[12],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3674,"end":3679}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":27,"generationNumber":6,"generationTime":220.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"lastMatch\u003dfalse;\n","lineNumberRange":{"start":3656,"end":3659}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"ce05bd009c8507c84cf38abf839ec964"},"selectionCount":0,"operation":{"parentIds":[22],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"lastMatch\u003dfalse;\n","lineNumberRange":{"start":3656,"end":3659}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,12 +3651,10 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n-                if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n-                    replaceIndex \u003d i;\n-                }\n+                if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex)\n+\t\t\t\t\tlastMatch \u003d false;\n             }\n         }\n         // NOTE: logic mostly below END"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":28,"generationNumber":6,"generationTime":35.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Short.TYPE.equals(cls)","lineNumberRange":{"start":3685,"end":3685}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[12],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Short.TYPE.equals(cls)","lineNumberRange":{"start":3685,"end":3685}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":29,"generationNumber":6,"generationTime":170.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3672,"end":3672}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2d011246fcdea72a77ec19ba3dfce13a"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3672,"end":3672}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3668,8 +3668,7 @@\n \n         int start \u003d 0;\n \n-        // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n-        int increase \u003d 0;\n+        return result;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":30,"generationNumber":6,"generationTime":183.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c array.length","lineNumberRange":{"start":3618,"end":3618}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"442bdd3e6c06c09ab1098dbfdef0be85"},"selectionCount":0,"operation":{"parentIds":[12],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c array.length","lineNumberRange":{"start":3618,"end":3618}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3616,7 +3615,7 @@\n         }\n \n         // if recursing, this shouldnt be less than 0\n-        if (timeToLive \u003c 0) {\n+        if (i \u003c array.length) {\n             throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);\n         }\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":31,"generationNumber":7,"generationTime":964.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b2c3b66d3b8d21d44ea4c0ee7e90e3cf"},"selectionCount":3,"operation":{"parentIds":[22],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3720,7 +3720,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":32,"generationNumber":7,"generationTime":430.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3700,"end":3700}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"7fb0204d752521d8dbfced91c8a1a1fc"},"selectionCount":2,"operation":{"parentIds":[22],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3700,"end":3700}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3697,7 +3697,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0;; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":33,"generationNumber":7,"generationTime":0.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"isEmpty(str)","lineNumberRange":{"start":3619,"end":3619}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"isEmpty(str)","lineNumberRange":{"start":3619,"end":3619}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":34,"generationNumber":7,"generationTime":14.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"strs[i] \u003d\u003d null","lineNumberRange":{"start":3701,"end":3702}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[22],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"strs[i] \u003d\u003d null","lineNumberRange":{"start":3701,"end":3702}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":35,"generationNumber":7,"generationTime":13.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array[i]\u003dtmp;\n","lineNumberRange":{"start":3711,"end":3714}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array[i]\u003dtmp;\n","lineNumberRange":{"start":3711,"end":3714}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":36,"generationNumber":8,"generationTime":12.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3612,"end":3613}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3612,"end":3613}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":37,"generationNumber":8,"generationTime":85.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0bc80fbfb82cc299e0e18531b84cefd0"},"selectionCount":0,"operation":{"parentIds":[22],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,9 +3631,6 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n-        boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n-\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n@@ -3651,7 +3648,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":38,"generationNumber":8,"generationTime":82.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Class\u003c?\u003e type\u003darray.getClass().getComponentType();\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"534e860d3ccaf38add7a28c0e4b0ceb4"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Class\u003c?\u003e type\u003darray.getClass().getComponentType();\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,8 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n+        Class\u003c?\u003e type\u003darray.getClass().getComponentType();\n+\t\treturn replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":39,"generationNumber":8,"generationTime":96.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"newArray[newArray.length - 1]\u003delement;\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f6381fc2c270161cb05cbdbe3c9875df"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"newArray[newArray.length - 1]\u003delement;\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,8 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n+        newArray[newArray.length - 1] \u003d element;\n+\t\treturn replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":40,"generationNumber":8,"generationTime":143.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[31],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":41,"generationNumber":8,"generationTime":34.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3700,"end":3700}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[32,31],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":42,"generationNumber":8,"generationTime":18.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[31,32],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":43,"generationNumber":9,"generationTime":106.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return EMPTY_SHORT_ARRAY;\n","lineNumberRange":{"start":3648,"end":3648}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e0b6b5e0e897ee5672617a843c923a8f"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return EMPTY_SHORT_ARRAY;\n","lineNumberRange":{"start":3648,"end":3648}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,8 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n+                return EMPTY_SHORT_ARRAY;\n+\t\t\t\tcontinue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":44,"generationNumber":9,"generationTime":19.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null || isEmpty(open) || isEmpty(close)","lineNumberRange":{"start":3619,"end":3619}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[22],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null || isEmpty(open) || isEmpty(close)","lineNumberRange":{"start":3619,"end":3619}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":45,"generationNumber":9,"generationTime":127.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3700,"end":3700}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null || searchStr \u003d\u003d null","lineNumberRange":{"start":3612,"end":3613}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[32],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null || searchStr \u003d\u003d null","lineNumberRange":{"start":3612,"end":3613}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":46,"generationNumber":9,"generationTime":84.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return getShortCanonicalName(object.getClass().getName());\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"046ea49a25b1cbbcdb5ad671f006487d"},"selectionCount":0,"operation":{"parentIds":[0],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return getShortCanonicalName(object.getClass().getName());\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,7 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n-        int replaceIndex \u003d -1;\n+        return getShortCanonicalName(object.getClass().getName());\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":47,"generationNumber":9,"generationTime":962.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a4f0c98b10ea4b0a7acaee7941dbc135"},"selectionCount":2,"operation":{"parentIds":[22],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3710,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":48,"generationNumber":9,"generationTime":41.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[31,32],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":49,"generationNumber":9,"generationTime":40.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3700,"end":3700}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[32,31],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":50,"generationNumber":10,"generationTime":20.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3612,"end":3613}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[22],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3612,"end":3613}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":51,"generationNumber":10,"generationTime":117.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int i\u003d0;\n","lineNumberRange":{"start":3691,"end":3691}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"80d086726480653e9c8ef9641d049ecd"},"selectionCount":0,"operation":{"parentIds":[22],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int i\u003d0;\n","lineNumberRange":{"start":3691,"end":3691}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3689,6 +3689,7 @@\n                 buf.append(text.charAt(i));\n             }\n             buf.append(replacementList[replaceIndex]);\n+\t\t\tint i \u003d 0;\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":52,"generationNumber":10,"generationTime":108.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return -1;\n","lineNumberRange":{"start":3697,"end":3697}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"ec8d30ec4de300cd1945583f2f89585f"},"selectionCount":0,"operation":{"parentIds":[22],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return -1;\n","lineNumberRange":{"start":3697,"end":3697}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3694,7 +3694,8 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n+            return -1;\n+\t\t\ttempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":53,"generationNumber":10,"generationTime":89.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Object first\u003diterator.next();\n","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e2f458a453a9e972e5e1f05ef43f52e2"},"selectionCount":0,"operation":{"parentIds":[31],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Object first\u003diterator.next();\n","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,10 +3651,10 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n+                    Object first \u003d iterator.next();\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3720,7 +3720,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":54,"generationNumber":10,"generationTime":88.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  buf.append(separator);\n  Object obj\u003diterator.next();\n  if (obj !\u003d null) {\n    buf.append(obj);\n  }\n}\n","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"538d9adc0546abd24b5407597a7daa06"},"selectionCount":0,"operation":{"parentIds":[31],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  buf.append(separator);\n  Object obj\u003diterator.next();\n  if (obj !\u003d null) {\n    buf.append(obj);\n  }\n}\n","lineNumberRange":{"start":3695,"end":3695}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3692,7 +3692,14 @@\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n \n-            textIndex \u003d -1;\n+            {\n+\t\t\t\tbuf.append(separator);\n+\t\t\t\tObject obj \u003d iterator.next();\n+\t\t\t\tif (obj !\u003d null) {\n+\t\t\t\t\tbuf.append(obj);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\ttextIndex \u003d -1;\n             replaceIndex \u003d -1;\n             tempIndex \u003d -1;\n             // find the next earliest match\n@@ -3720,7 +3727,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":55,"generationNumber":10,"generationTime":24.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"701aa155b509f2179446fb281c1ea889"},"selectionCount":8,"operation":{"parentIds":[31,47],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3710,7 +3710,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,7 +3719,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":56,"generationNumber":10,"generationTime":24.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[31,47],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":57,"generationNumber":11,"generationTime":75.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return i;\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b2bb72b3d9947eb1ef4b97df18886630"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return i;\n","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        return i;\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":58,"generationNumber":11,"generationTime":562.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3722,"end":3722}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5d2cd24b4fe7d6d10eb0d5e7bb618055"},"selectionCount":0,"operation":{"parentIds":[47],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3722,"end":3722}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3710,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3721,6 +3720,7 @@\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n+\t\t\ti++;\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":59,"generationNumber":11,"generationTime":581.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"604a55534c6029c6e33dabee9afe19fb"},"selectionCount":9,"operation":{"parentIds":[47],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3647,11 +3647,9 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3708,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":60,"generationNumber":11,"generationTime":41.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[47],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":61,"generationNumber":11,"generationTime":30.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"isEmpty(str)","lineNumberRange":{"start":3709,"end":3709}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[47],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"isEmpty(str)","lineNumberRange":{"start":3709,"end":3709}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":62,"generationNumber":11,"generationTime":14.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[55,47],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":63,"generationNumber":11,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[55,47],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":64,"generationNumber":12,"generationTime":119.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array2 \u003d\u003d null","lineNumberRange":{"start":3688,"end":3688}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[55],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array2 \u003d\u003d null","lineNumberRange":{"start":3688,"end":3688}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":65,"generationNumber":12,"generationTime":99.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3720,"end":3720}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e9c552a161d2a8f7e62607bd4380ff67"},"selectionCount":0,"operation":{"parentIds":[55],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3720,"end":3720}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3710,7 +3710,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3718,9 +3717,7 @@\n             // NOTE: logic duplicated above END\n \n         }\n-        int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":66,"generationNumber":12,"generationTime":14.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":67,"generationNumber":12,"generationTime":0.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The String did not match any specified value\");\n","lineNumberRange":{"start":3656,"end":3659}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The String did not match any specified value\");\n","lineNumberRange":{"start":3656,"end":3659}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":68,"generationNumber":12,"generationTime":13.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3653,"end":3653}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3653,"end":3653}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":69,"generationNumber":12,"generationTime":33.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,55],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":70,"generationNumber":12,"generationTime":43.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0750b470aa24715f5deff0f75313461b"},"selectionCount":0,"operation":{"parentIds":[59,55],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3710,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,7 +3719,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":71,"generationNumber":13,"generationTime":70.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Object[] values2\u003dArrayUtils.addAll(values,i);\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"aacab9c4dc0dc264cc2e3e9391590c6b"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Object[] values2\u003dArrayUtils.addAll(values,i);\n","lineNumberRange":{"start":3654,"end":3654}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3652,6 +3652,7 @@\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n+\t\t\t\tObject[] values2 \u003d ArrayUtils.addAll(values, i);\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":72,"generationNumber":13,"generationTime":219.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3644,"end":3644}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6fcaad78e95fe07a61e3f9ad1ec88214"},"selectionCount":0,"operation":{"parentIds":[59],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3644,"end":3644}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3641,17 +3641,15 @@\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n-        for (int i \u003d 0; i \u003c searchLength; i++) {\n+        for (int i \u003d 0;; i++) {\n             if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                 searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3708,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":73,"generationNumber":13,"generationTime":101.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return i;\n","lineNumberRange":{"start":3644,"end":3661}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2b6708417a6ed8f6c912d304b5408fd9"},"selectionCount":0,"operation":{"parentIds":[55],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return i;\n","lineNumberRange":{"start":3644,"end":3661}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3641,26 +3641,9 @@\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n-        for (int i \u003d 0; i \u003c searchLength; i++) {\n-            if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n-                searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n-            {\n-                continue;\n-            }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n+        for (int i \u003d 0; i \u003c searchLength; i++)\n+\t\t return i;\n \n-            // see if we need to keep searching for this\n-            if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n-            } else {\n-                if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n-                    replaceIndex \u003d i;\n-                }\n-            }\n-        }\n-        // NOTE: logic mostly below END\n-\n         // no search strings found, we are done\n         if (textIndex \u003d\u003d -1) {\n             return text;\n@@ -3710,7 +3693,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,7 +3702,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":74,"generationNumber":13,"generationTime":109.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c array.length","lineNumberRange":{"start":3612,"end":3613}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"bc85cd0337cf3e83ebbb8b86ce9be062"},"selectionCount":0,"operation":{"parentIds":[55],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c array.length","lineNumberRange":{"start":3612,"end":3613}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3609,8 +3609,7 @@\n         // mchyzer Performance note: This creates very few new objects (one major goal)\n         // let me know if there are performance requests, we can create a harness to measure\n \n-        if (text \u003d\u003d null || text.length() \u003d\u003d 0 || searchList \u003d\u003d null || \n-            searchList.length \u003d\u003d 0 || replacementList \u003d\u003d null || replacementList.length \u003d\u003d 0) \n+        if (i \u003c array.length) \n         {\n             return text;\n         }\n@@ -3710,7 +3709,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,7 +3718,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":75,"generationNumber":13,"generationTime":97.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"cfe0733e5380dcbbae5f8ec8735ce80a"},"selectionCount":0,"operation":{"parentIds":[55],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,7 +3636,6 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n-        int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3710,7 +3709,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,7 +3718,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":76,"generationNumber":13,"generationTime":15.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[55,59],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":77,"generationNumber":13,"generationTime":44.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,55],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":78,"generationNumber":14,"generationTime":124.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return toIntValue(ch.charValue());\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"84bf7d22700e9223d230f94532cefab9"},"selectionCount":0,"operation":{"parentIds":[59],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return toIntValue(ch.charValue());\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3637,6 +3637,7 @@\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n+\t\treturn toIntValue(ch.charValue());\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3647,11 +3648,9 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3709,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":79,"generationNumber":14,"generationTime":82.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"de5164f56fc83db363013ff670c28327"},"selectionCount":0,"operation":{"parentIds":[22],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,7 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n-        int replaceIndex \u003d -1;\n+        return str;\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":80,"generationNumber":14,"generationTime":84.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3721,"end":3721}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6b578ffd660d0881723e30c4c09c921f"},"selectionCount":0,"operation":{"parentIds":[22],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3721,"end":3721}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3651,7 +3651,7 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3718,7 +3718,6 @@\n             // NOTE: logic duplicated above END\n \n         }\n-        int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":81,"generationNumber":14,"generationTime":565.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3615,"end":3615}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2547f47480c948f9fdd6b4dee01dc544"},"selectionCount":0,"operation":{"parentIds":[55],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3615,"end":3615}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9242424242424242,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3710,7 +3709,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,7 +3718,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":82,"generationNumber":14,"generationTime":49.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str.equals(falseString)","lineNumberRange":{"start":3612,"end":3613}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str.equals(falseString)","lineNumberRange":{"start":3612,"end":3613}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":83,"generationNumber":14,"generationTime":16.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,55],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":84,"generationNumber":14,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"ba0e9f64e517cdf95af32e8c69bdaf5f"},"selectionCount":3,"operation":{"parentIds":[59,55],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3647,8 +3647,6 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n@@ -3710,7 +3708,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":85,"generationNumber":15,"generationTime":98.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1a2e4b28a277d3d0f13830dd265cf628"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,8 +3631,7 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n-        boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n+        i++;\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":86,"generationNumber":15,"generationTime":117.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str.substring(0,str.length() - remove.length());\n","lineNumberRange":{"start":3725,"end":3725}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"519bd86a4c5eb00b3c5eb1d6b51f2dbe"},"selectionCount":0,"operation":{"parentIds":[55],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str.substring(0,str.length() - remove.length());\n","lineNumberRange":{"start":3725,"end":3725}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3710,7 +3710,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,11 +3719,10 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n+            return str.substring(0, str.length() - remove.length());\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":87,"generationNumber":15,"generationTime":92.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array[j]\u003darray[i];\n","lineNumberRange":{"start":3648,"end":3648}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"587245556d8c10870d1dc5d7cace86d4"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array[j]\u003darray[i];\n","lineNumberRange":{"start":3648,"end":3648}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,8 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n+                array[j] \u003d array[i];\n+\t\t\t\tcontinue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":88,"generationNumber":15,"generationTime":46.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"classes \u003d\u003d null","lineNumberRange":{"start":3612,"end":3613}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[55],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"classes \u003d\u003d null","lineNumberRange":{"start":3612,"end":3613}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":89,"generationNumber":15,"generationTime":183.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return indexOf(array,valueToFind) !\u003d INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3664,"end":3664}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"56c2fdc361219ad876d3c6df6c846a94"},"selectionCount":0,"operation":{"parentIds":[84],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return indexOf(array,valueToFind) !\u003d INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3664,"end":3664}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,7 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n+            return indexOf(array, valueToFind) !\u003d INDEX_NOT_FOUND;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3647,8 +3647,6 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n@@ -3710,7 +3708,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":90,"generationNumber":15,"generationTime":33.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"28ee3e8115fb450b221a23839b79249a"},"selectionCount":0,"operation":{"parentIds":[55,59],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3647,11 +3647,9 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3720,7 +3718,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":91,"generationNumber":15,"generationTime":34.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,84],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":92,"generationNumber":16,"generationTime":396.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int replaceIndex\u003d-1;\n","lineNumberRange":{"start":3615,"end":3615}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e55e3ae58e49ed0fe239cccadbbe6cb2"},"selectionCount":0,"operation":{"parentIds":[59],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int replaceIndex\u003d-1;\n","lineNumberRange":{"start":3615,"end":3615}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9242424242424242,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,7 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n+            int replaceIndex \u003d -1;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3647,11 +3647,9 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3708,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":93,"generationNumber":16,"generationTime":350.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3664,"end":3664}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6adfa4a09ceb3fc02aa866a8f9a1d134"},"selectionCount":0,"operation":{"parentIds":[84],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3664,"end":3664}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9242424242424242,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3647,8 +3646,6 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n@@ -3710,7 +3707,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":94,"generationNumber":16,"generationTime":92.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3651,"end":3651}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"3954457df2b370f958764880e557b14b"},"selectionCount":0,"operation":{"parentIds":[84],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3651,"end":3651}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3647,10 +3647,8 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n-            if (tempIndex \u003d\u003d -1) {\n+            if (array \u003d\u003d null) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n@@ -3710,7 +3708,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":95,"generationNumber":16,"generationTime":14.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":96,"generationNumber":16,"generationTime":81.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"de6d019190950539e430f857ea829dbb"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3634,7 +3634,8 @@\n         // keep track of which still have matches\n         boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n \n-        // index on index that the match was found\n+        i++;\n+\t\t// index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":97,"generationNumber":16,"generationTime":43.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[84,59],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":98,"generationNumber":16,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,55],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":99,"generationNumber":17,"generationTime":110.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return Float.parseFloat(str);\n","lineNumberRange":{"start":3624,"end":3624}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"51b9f9519f249c1d6853de0910dceaa6"},"selectionCount":0,"operation":{"parentIds":[55],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return Float.parseFloat(str);\n","lineNumberRange":{"start":3624,"end":3624}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3621,7 +3621,8 @@\n         }\n \n         int searchLength \u003d searchList.length;\n-        int replacementLength \u003d replacementList.length;\n+        return Float.parseFloat(str);\n+\t\tint replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n         if (searchLength !\u003d replacementLength) {\n@@ -3710,7 +3711,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,7 +3720,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":100,"generationNumber":17,"generationTime":77.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"65f87c7669cab09931d902659fe8251f"},"selectionCount":0,"operation":{"parentIds":[0],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3673,7 +3673,7 @@\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n-            int greater \u003d replacementList[i].length() - searchList[i].length();\n+            return false;\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":101,"generationNumber":17,"generationTime":434.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2eeb2005382950e5d1658cd82b473ac4"},"selectionCount":15,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":102,"generationNumber":17,"generationTime":64.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"index \u003d\u003d INDEX_NOT_FOUND","lineNumberRange":{"start":3724,"end":3724}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"893f50af2b4a7d5f37813ac040898f51"},"selectionCount":0,"operation":{"parentIds":[55],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"index \u003d\u003d INDEX_NOT_FOUND","lineNumberRange":{"start":3724,"end":3724}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3710,7 +3710,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }\n@@ -3720,10 +3719,9 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n-        if (!repeat) {\n+        if (index \u003d\u003d INDEX_NOT_FOUND) {\n             return result;\n         }\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":103,"generationNumber":17,"generationTime":77.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003dstr.charAt(0);\n","lineNumberRange":{"start":3624,"end":3624}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1b6d10db95f108d759cae4373d2e1b20"},"selectionCount":0,"operation":{"parentIds":[59],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003dstr.charAt(0);\n","lineNumberRange":{"start":3624,"end":3624}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3621,7 +3621,7 @@\n         }\n \n         int searchLength \u003d searchList.length;\n-        int replacementLength \u003d replacementList.length;\n+        char ch \u003d str.charAt(0);\n \n         // make sure lengths are ok, these need to be equal\n         if (searchLength !\u003d replacementLength) {\n@@ -3647,11 +3647,9 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3708,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":104,"generationNumber":17,"generationTime":21.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,84],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":105,"generationNumber":17,"generationTime":20.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,84],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":106,"generationNumber":18,"generationTime":64.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3658,"end":3658}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"abffec88c129d08c46ad69de0497e076"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3658,"end":3658}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3655,7 +3655,7 @@\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n-                    replaceIndex \u003d i;\n+                    return str;\n                 }\n             }\n         }\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":107,"generationNumber":18,"generationTime":321.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"92af2e32ba1bdd28e142246a3c91b1ed"},"selectionCount":33,"operation":{"parentIds":[101],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":108,"generationNumber":18,"generationTime":76.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  buffer[count]\u003d(char)(56320 + random.nextInt(128));\n  count--;\n  buffer[count]\u003dch;\n}\n","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4340fe2be12149d97f0a6b3e446b2c4b"},"selectionCount":0,"operation":{"parentIds":[59],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  buffer[count]\u003d(char)(56320 + random.nextInt(128));\n  count--;\n  buffer[count]\u003dch;\n}\n","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,8 +3631,11 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n-        boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n+        {\n+\t\t\tbuffer[count] \u003d (char) (56320 + random.nextInt(128));\n+\t\t\tcount--;\n+\t\t\tbuffer[count] \u003d ch;\n+\t\t}\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n@@ -3647,11 +3650,9 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3711,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":109,"generationNumber":18,"generationTime":73.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return clone(array2);\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"246f6041c7eae005fc0a077ccc41fad4"},"selectionCount":0,"operation":{"parentIds":[59],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return clone(array2);\n","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\treturn clone(array2);\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3647,11 +3648,9 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3709,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":110,"generationNumber":18,"generationTime":54.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"297a62810052c479171fdad66692cd2f"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,9 +3631,6 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n-        boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n-\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":111,"generationNumber":18,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,55],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":112,"generationNumber":18,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59,55],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":113,"generationNumber":19,"generationTime":60.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0597eb7961f9792af79cd8509d5623f2"},"selectionCount":0,"operation":{"parentIds":[101],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i++;\n","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3673,14 +3673,11 @@\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n-            int greater \u003d replacementList[i].length() - searchList[i].length();\n+            i++;\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":114,"generationNumber":19,"generationTime":68.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3718,"end":3718}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4a29bbc27bf29481368174fcd8e271a9"},"selectionCount":0,"operation":{"parentIds":[101],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3718,"end":3718}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3718,7 +3715,6 @@\n             // NOTE: logic duplicated above END\n \n         }\n-        int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":115,"generationNumber":19,"generationTime":176.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3719,"end":3719}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5fb2dc4d7ce5d4aeb245748e2214f11d"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3719,"end":3719}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3718,7 +3716,6 @@\n             // NOTE: logic duplicated above END\n \n         }\n-        int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":116,"generationNumber":19,"generationTime":103.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return Boolean.TRUE;\n","lineNumberRange":{"start":3652,"end":3652}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9a01c28e55718dd6f25be36d58ed111f"},"selectionCount":0,"operation":{"parentIds":[59],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return Boolean.TRUE;\n","lineNumberRange":{"start":3652,"end":3652}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3647,11 +3647,10 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n+\t\t\t\treturn Boolean.TRUE;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3710,7 +3709,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":117,"generationNumber":19,"generationTime":78.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003dstr.charAt(i);\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5da93e8568d439ffac3cead95ea6687a"},"selectionCount":0,"operation":{"parentIds":[101],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003dstr.charAt(i);\n","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3634,8 +3634,7 @@\n         // keep track of which still have matches\n         boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n \n-        // index on index that the match was found\n-        int textIndex \u003d -1;\n+        char ch \u003d str.charAt(i);\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3677,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":118,"generationNumber":19,"generationTime":33.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,59],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":119,"generationNumber":19,"generationTime":52.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1844f82c31e15a095655f4fc7e0034c0"},"selectionCount":0,"operation":{"parentIds":[59,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3710,7 +3708,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":120,"generationNumber":20,"generationTime":57.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3645,"end":3646}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[59],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3645,"end":3646}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":121,"generationNumber":20,"generationTime":53.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return cAvailableLocaleSet;\n","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b0ec02f602bfea33e125839f69f9a543"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return cAvailableLocaleSet;\n","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3673,7 +3673,8 @@\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n-            int greater \u003d replacementList[i].length() - searchList[i].length();\n+            return cAvailableLocaleSet;\n+\t\t\tint greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":122,"generationNumber":20,"generationTime":21.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str.length() \u003d\u003d 0","lineNumberRange":{"start":3684,"end":3684}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str.length() \u003d\u003d 0","lineNumberRange":{"start":3684,"end":3684}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":123,"generationNumber":20,"generationTime":68.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return array;\n","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4d0a38fc15092607f42b89a27c9af84d"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return array;\n","lineNumberRange":{"start":3695,"end":3695}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,8 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n+            return array;\n+\t\t\ttempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":124,"generationNumber":20,"generationTime":0.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"c \u003d\u003d null","lineNumberRange":{"start":3712,"end":3712}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"c \u003d\u003d null","lineNumberRange":{"start":3712,"end":3712}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":125,"generationNumber":20,"generationTime":29.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b6aead3acdd60304bdda4b67b9ae6206"},"selectionCount":2,"operation":{"parentIds":[107,59],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3647,8 +3648,6 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n@@ -3678,9 +3677,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":126,"generationNumber":20,"generationTime":21.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The character must not be null\");\n","lineNumberRange":{"start":3654,"end":3654}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6ef00bf12af44e96b51f52f2ef20eea0"},"selectionCount":0,"operation":{"parentIds":[59,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3647,11 +3647,9 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n+                throw new IllegalArgumentException(\"The character must not be null\");\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":127,"generationNumber":21,"generationTime":53.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return nullString;\n","lineNumberRange":{"start":3640,"end":3640}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"88b25cd0aca78ba75612c18bcd8f7daf"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return nullString;\n","lineNumberRange":{"start":3640,"end":3640}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3637,7 +3637,8 @@\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n-        int tempIndex \u003d -1;\n+        return nullString;\n+\t\tint tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":128,"generationNumber":21,"generationTime":281.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8681d3c5d0871ce0d5d30e4e8409cc54"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3713,"end":3713}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3710,7 +3710,6 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":129,"generationNumber":21,"generationTime":72.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"String[] strs\u003dnew String[1];\n","lineNumberRange":{"start":3640,"end":3640}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"68f82960dc29c9e6d0961938e46c2082"},"selectionCount":0,"operation":{"parentIds":[0],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"String[] strs\u003dnew String[1];\n","lineNumberRange":{"start":3640,"end":3640}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3637,7 +3637,7 @@\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n-        int tempIndex \u003d -1;\n+        String[] strs \u003d new String[1];\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":130,"generationNumber":21,"generationTime":352.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return buf.toString();\n","lineNumberRange":{"start":3711,"end":3711}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1edc0c7c5b3f2f519b49d070573e5710"},"selectionCount":0,"operation":{"parentIds":[101],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return buf.toString();\n","lineNumberRange":{"start":3711,"end":3711}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3711,7 +3708,7 @@\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n+                        return buf.toString();\n                     }\n                 }\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":131,"generationNumber":21,"generationTime":35.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3645,"end":3662}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3645,"end":3662}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":132,"generationNumber":21,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[125,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":133,"generationNumber":21,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"35038f0c28a5341472fc5d5bfaa3cb8e"},"selectionCount":0,"operation":{"parentIds":[125,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3647,8 +3648,6 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n-\n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":134,"generationNumber":22,"generationTime":101.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3698,"end":3698}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6493284b3575a8bdc10b6c2565ca8e33"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3698,"end":3698}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3697,7 +3695,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0; array \u003d\u003d null; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":135,"generationNumber":22,"generationTime":168.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int sz\u003dstr.length();\n","lineNumberRange":{"start":3712,"end":3712}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"992fa52d87b29c4ba484180344ce26cb"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int sz\u003dstr.length();\n","lineNumberRange":{"start":3712,"end":3712}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3711,7 +3709,8 @@\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n+                        int sz \u003d str.length();\n+\t\t\t\t\t\treplaceIndex \u003d i;\n                     }\n                 }\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":136,"generationNumber":22,"generationTime":599.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d20477fe1055e9fe3342b7e71247be59"},"selectionCount":4,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3697,7 +3695,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0;; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":137,"generationNumber":22,"generationTime":81.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"(array1 \u003d\u003d null \u0026\u0026 array2 !\u003d null \u0026\u0026 array2.length \u003e 0) || (array2 \u003d\u003d null \u0026\u0026 array1 !\u003d null \u0026\u0026 array1.length \u003e 0) || (array1 !\u003d null \u0026\u0026 array2 !\u003d null \u0026\u0026 array1.length !\u003d array2.length)","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"805fe0a1d5a45d53a346704e2b0ff4ce"},"selectionCount":0,"operation":{"parentIds":[101],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"(array1 \u003d\u003d null \u0026\u0026 array2 !\u003d null \u0026\u0026 array2.length \u003e 0) || (array2 \u003d\u003d null \u0026\u0026 array1 !\u003d null \u0026\u0026 array1.length \u003e 0) || (array1 !\u003d null \u0026\u0026 array2 !\u003d null \u0026\u0026 array1.length !\u003d array2.length)","lineNumberRange":{"start":3683,"end":3683}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,12 +3678,11 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n-        while (textIndex !\u003d -1) {\n+        while ((array1 \u003d\u003d null \u0026\u0026 array2 !\u003d null \u0026\u0026 array2.length \u003e 0)\n+\t\t\t\t|| (array2 \u003d\u003d null \u0026\u0026 array1 !\u003d null \u0026\u0026 array1.length \u003e 0)\n+\t\t\t\t|| (array1 !\u003d null \u0026\u0026 array2 !\u003d null \u0026\u0026 array1.length !\u003d array2.length)) {\n \n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":138,"generationNumber":22,"generationTime":141.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3650,"end":3650}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3619,"end":3619}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[125],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3619,"end":3619}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":139,"generationNumber":22,"generationTime":43.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9d6b93c292ce4d9bae7d84c44e06268f"},"selectionCount":0,"operation":{"parentIds":[125,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,8 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3680,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":140,"generationNumber":22,"generationTime":29.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,125],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":141,"generationNumber":23,"generationTime":56.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3675,"end":3675}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a74201a7e4fbb3967c73a2c382c74640"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3675,"end":3675}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3672,7 +3672,7 @@\n         int increase \u003d 0;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n-        for (int i \u003d 0; i \u003c searchList.length; i++) {\n+        for (int i \u003d 0;; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":142,"generationNumber":23,"generationTime":56.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3640,"end":3640}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"679dd08a3eaca03589d0929cc8a2216e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3640,"end":3640}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3637,8 +3637,6 @@\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n-        int tempIndex \u003d -1;\n-\n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n         for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":143,"generationNumber":23,"generationTime":49.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"value \u003d\u003d trueValue","lineNumberRange":{"start":3619,"end":3619}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"99d283d99ec675eb30edf6d48ac4c375"},"selectionCount":0,"operation":{"parentIds":[0],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"value \u003d\u003d trueValue","lineNumberRange":{"start":3619,"end":3619}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3616,7 +3616,7 @@\n         }\n \n         // if recursing, this shouldnt be less than 0\n-        if (timeToLive \u003c 0) {\n+        if (value \u003d\u003d trueValue) {\n             throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);\n         }\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":144,"generationNumber":23,"generationTime":10.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c strLen","lineNumberRange":{"start":3645,"end":3646}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[101],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c strLen","lineNumberRange":{"start":3645,"end":3646}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":145,"generationNumber":23,"generationTime":130.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"count++;\n","lineNumberRange":{"start":3623,"end":3623}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"3b84df404b3e60118be1cf8890acf811"},"selectionCount":0,"operation":{"parentIds":[136],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"count++;\n","lineNumberRange":{"start":3623,"end":3623}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3620,7 +3620,7 @@\n             throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);\n         }\n \n-        int searchLength \u003d searchList.length;\n+        count++;\n         int replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3697,7 +3695,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0;; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":146,"generationNumber":23,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"26b0c7ad39847219ef1ac65b5506812f"},"selectionCount":0,"operation":{"parentIds":[136,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3697,7 +3694,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0;; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":147,"generationNumber":23,"generationTime":10.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[136,107],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":148,"generationNumber":24,"generationTime":58.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4bdc204a1d446912d1aa19e0e923e6ba"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3726,"end":3726}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3723,8 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n+            return false;\n+\t\t\treturn result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":149,"generationNumber":24,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3719,"end":3719}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3719,"end":3719}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":150,"generationNumber":24,"generationTime":0.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end \u003e len","lineNumberRange":{"start":3675,"end":3675}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end \u003e len","lineNumberRange":{"start":3675,"end":3675}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":151,"generationNumber":24,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int strLen\u003dstr.length();\n","lineNumberRange":{"start":3676,"end":3681}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[136],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int strLen\u003dstr.length();\n","lineNumberRange":{"start":3676,"end":3681}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":152,"generationNumber":24,"generationTime":55.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return (byte[])remove((Object)array,index);\n","lineNumberRange":{"start":3672,"end":3672}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"70ff79ae7cae5efe9e2c4c56c2b99f90"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return (byte[])remove((Object)array,index);\n","lineNumberRange":{"start":3672,"end":3672}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3668,8 +3668,7 @@\n \n         int start \u003d 0;\n \n-        // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n-        int increase \u003d 0;\n+        return (byte[]) remove((Object) array, index);\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":153,"generationNumber":24,"generationTime":21.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,136],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":154,"generationNumber":24,"generationTime":20.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[136,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":155,"generationNumber":25,"generationTime":81.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"negated","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"26a9c807cd685e38a3bb9944a9d9939b"},"selectionCount":0,"operation":{"parentIds":[136],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"negated","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3672,15 +3673,12 @@\n         int increase \u003d 0;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n-        for (int i \u003d 0; i \u003c searchList.length; i++) {\n+        for (int i \u003d 0; negated; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3697,7 +3695,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0;; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":156,"generationNumber":25,"generationTime":43.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3627,"end":3627}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[136],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3627,"end":3627}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":157,"generationNumber":25,"generationTime":55.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[136],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":158,"generationNumber":25,"generationTime":422.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3615,"end":3615}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"588d74d5d1fa818d652db69f778dafbd"},"selectionCount":0,"operation":{"parentIds":[136],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3615,"end":3615}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9242424242424242,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3697,7 +3694,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0;; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":159,"generationNumber":25,"generationTime":91.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"trueCount++;\n","lineNumberRange":{"start":3623,"end":3623}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6b8a5d0ec10059a51800ef2f9876f3a8"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"trueCount++;\n","lineNumberRange":{"start":3623,"end":3623}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3621,6 +3621,7 @@\n         }\n \n         int searchLength \u003d searchList.length;\n+\t\ttrueCount++;\n         int replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n@@ -3636,6 +3637,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3680,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":160,"generationNumber":25,"generationTime":43.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,136],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":161,"generationNumber":25,"generationTime":14.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[136,107],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":162,"generationNumber":26,"generationTime":430.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e1db7d087cc698626b05c3d23e1df98d"},"selectionCount":6,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3723,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":163,"generationNumber":26,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3681}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3681}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":164,"generationNumber":26,"generationTime":288.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"51479fb092a9ad267b9ae9177bf47b52"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3693,7 +3691,6 @@\n             start \u003d textIndex + searchList[replaceIndex].length();\n \n             textIndex \u003d -1;\n-            replaceIndex \u003d -1;\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":165,"generationNumber":26,"generationTime":0.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"newTokenStart !\u003d tokenStart","lineNumberRange":{"start":3675,"end":3675}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"newTokenStart !\u003d tokenStart","lineNumberRange":{"start":3675,"end":3675}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":166,"generationNumber":26,"generationTime":63.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  List\u003cLocale\u003e list\u003dArrays.asList(Locale.getAvailableLocales());\n  cAvailableLocaleList\u003dCollections.unmodifiableList(list);\n}\n","lineNumberRange":{"start":3658,"end":3658}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"fe8f18f5e1eb75335df39102e2d6f9e7"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  List\u003cLocale\u003e list\u003dArrays.asList(Locale.getAvailableLocales());\n  cAvailableLocaleList\u003dCollections.unmodifiableList(list);\n}\n","lineNumberRange":{"start":3658,"end":3658}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3655,7 +3655,8 @@\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n-                    replaceIndex \u003d i;\n+                    {List\u003cLocale\u003e list\u003dArrays.asList(Locale.getAvailableLocales());cAvailableLocaleList\u003dCollections.unmodifiableList(list);}\n+\t\t\t\t\treplaceIndex \u003d i;\n                 }\n             }\n         }\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":167,"generationNumber":26,"generationTime":25.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3698}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"82f6cfbbf1f4009928880d2ec5c6c88d"},"selectionCount":0,"operation":{"parentIds":[107,136],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3697,7 +3698,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0;; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":168,"generationNumber":26,"generationTime":21.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[136,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":169,"generationNumber":27,"generationTime":61.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return unicodeEscaped(ch.charValue());\n","lineNumberRange":{"start":3624,"end":3624}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b1f07bbc697f8a49f9a232b882ac9d57"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return unicodeEscaped(ch.charValue());\n","lineNumberRange":{"start":3624,"end":3624}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3621,7 +3621,7 @@\n         }\n \n         int searchLength \u003d searchList.length;\n-        int replacementLength \u003d replacementList.length;\n+        return unicodeEscaped(ch.charValue());\n \n         // make sure lengths are ok, these need to be equal\n         if (searchLength !\u003d replacementLength) {\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":170,"generationNumber":27,"generationTime":67.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return ArrayUtils.EMPTY_STRING_ARRAY;\n","lineNumberRange":{"start":3641,"end":3641}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"42e4af7c56961362278420e35f9afa80"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return ArrayUtils.EMPTY_STRING_ARRAY;\n","lineNumberRange":{"start":3641,"end":3641}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,8 +3636,9 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n-        int tempIndex \u003d -1;\n+        return ArrayUtils.EMPTY_STRING_ARRAY;\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":171,"generationNumber":27,"generationTime":335.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3658,"end":3658}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"41a0e02f6f3d5070866a048fbe397664"},"selectionCount":0,"operation":{"parentIds":[162],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3658,"end":3658}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3655,7 +3655,6 @@\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n-                    replaceIndex \u003d i;\n                 }\n             }\n         }\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3722,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":172,"generationNumber":27,"generationTime":63.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"91354ae3f179bc3d4b5610364ee117ce"},"selectionCount":0,"operation":{"parentIds":[162],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,6 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3722,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":173,"generationNumber":27,"generationTime":80.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3644,"end":3644}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"72c600548f145e14ca9c01edca7ec8d0"},"selectionCount":0,"operation":{"parentIds":[0],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3644,"end":3644}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3641,7 +3641,7 @@\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n-        for (int i \u003d 0; i \u003c searchLength; i++) {\n+        for (int i \u003d 0;; i++) {\n             if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                 searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n             {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":174,"generationNumber":27,"generationTime":20.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[162,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":175,"generationNumber":27,"generationTime":18.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[162,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":176,"generationNumber":28,"generationTime":46.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3615,"end":3615}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c2d1bb20d8d3c6722d4e54dbb18cfbb4"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3615,"end":3615}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3436,6 +3436,7 @@\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n             return text;\n+\t\t\treturn false;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":177,"generationNumber":28,"generationTime":61.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3693,"end":3693}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"99d3ad08695d3363be5cf0483f3a2787"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3693,"end":3693}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3691,6 +3691,7 @@\n             buf.append(replacementList[replaceIndex]);\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n+\t\t\treturn null;\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":178,"generationNumber":28,"generationTime":0.0,"bases":[{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"--max \u003d\u003d 0","lineNumberRange":{"start":3627,"end":3627}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[0],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"--max \u003d\u003d 0","lineNumberRange":{"start":3627,"end":3627}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":179,"generationNumber":28,"generationTime":62.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndexInclusive\u003d0;\n","lineNumberRange":{"start":3722,"end":3722}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"fa385aa0ff45237d9b9e665056b4d14f"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndexInclusive\u003d0;\n","lineNumberRange":{"start":3722,"end":3722}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3720,7 +3719,7 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n+            startIndexInclusive \u003d 0;\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":180,"generationNumber":28,"generationTime":57.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3684,"end":3718}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8cd16b1cad2d5036104f6cade755536d"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3684,"end":3718}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,46 +3679,9 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n-        while (textIndex !\u003d -1) {\n-\n-            for (int i \u003d start; i \u003c textIndex; i++) {\n-                buf.append(text.charAt(i));\n-            }\n-            buf.append(replacementList[replaceIndex]);\n-\n-            start \u003d textIndex + searchList[replaceIndex].length();\n-\n-            textIndex \u003d -1;\n-            replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n-            // find the next earliest match\n-            // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n-                if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n-                    searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n-                {\n-                    continue;\n-                }\n-                tempIndex \u003d text.indexOf(searchList[i], start);\n-\n-                // see if we need to keep searching for this\n-                if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n-                } else {\n-                    if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n-                    }\n-                }\n-            }\n-            // NOTE: logic duplicated above END\n-\n-        }\n+        while (textIndex !\u003d -1)\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":181,"generationNumber":28,"generationTime":26.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[162,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":182,"generationNumber":28,"generationTime":27.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a384868be724a3a05d786665f5112bdd"},"selectionCount":1,"operation":{"parentIds":[162,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":183,"generationNumber":29,"generationTime":68.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"substrings.add(EMPTY);\n","lineNumberRange":{"start":3689,"end":3689}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f4231ba9458accf1a40c2ce2610a0f3a"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"substrings.add(EMPTY);\n","lineNumberRange":{"start":3689,"end":3689}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3688,7 +3686,7 @@\n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n             }\n-            buf.append(replacementList[replaceIndex]);\n+            substrings.add(EMPTY);\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":184,"generationNumber":29,"generationTime":10.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c array.length","lineNumberRange":{"start":3627,"end":3627}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c array.length","lineNumberRange":{"start":3627,"end":3627}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":185,"generationNumber":29,"generationTime":179.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return noNullElements(iterable,DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EXCEPTION_MESSAGE);\n","lineNumberRange":{"start":3649,"end":3649}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"fafbdb3d560d9ccc80edfe0060f3394a"},"selectionCount":0,"operation":{"parentIds":[182],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return noNullElements(iterable,DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EXCEPTION_MESSAGE);\n","lineNumberRange":{"start":3649,"end":3649}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,7 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n+                return noNullElements(iterable, DEFAULT_NO_NULL_ELEMENTS_COLLECTION_EXCEPTION_MESSAGE);\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":186,"generationNumber":29,"generationTime":83.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex\u003d0;\n","lineNumberRange":{"start":3648,"end":3648}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"70de7dcd6222ff5fa58d2fe7539b99e2"},"selectionCount":0,"operation":{"parentIds":[101],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex\u003d0;\n","lineNumberRange":{"start":3648,"end":3648}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1512,6 +1512,7 @@\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n                 continue;\n+\t\t\t\tstartIndex \u003d 0;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":187,"generationNumber":29,"generationTime":113.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"System.arraycopy(array2,0,joinedArray,array1.length,array2.length);\n","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"877a5a9c6141f2ac235644f004bc50e5"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"System.arraycopy(array2,0,joinedArray,array1.length,array2.length);\n","lineNumberRange":{"start":3694,"end":3694}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,6 +3692,7 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n+\t\t\tSystem.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":188,"generationNumber":29,"generationTime":31.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[162,182],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":189,"generationNumber":29,"generationTime":31.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"484dd1ac6e144bf54513f471f85db034"},"selectionCount":4,"operation":{"parentIds":[182,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":190,"generationNumber":30,"generationTime":86.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"ch\u003dCharacter.toUpperCase(ch);\n","lineNumberRange":{"start":3722,"end":3722}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"42125c516eb6d3f1e4357a4478791784"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"ch\u003dCharacter.toUpperCase(ch);\n","lineNumberRange":{"start":3722,"end":3722}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3721,6 +3720,7 @@\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n+\t\t\tch \u003d Character.toUpperCase(ch);\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":191,"generationNumber":30,"generationTime":125.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str\u003dstr + JAVA_VERSION_TRIMMED.substring(2,3);\n","lineNumberRange":{"start":3644,"end":3661}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[189],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str\u003dstr + JAVA_VERSION_TRIMMED.substring(2,3);\n","lineNumberRange":{"start":3644,"end":3661}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":192,"generationNumber":30,"generationTime":96.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3656,"end":3659}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"17129cb8011a7ff82bfcbbb7e3989bcf"},"selectionCount":0,"operation":{"parentIds":[189],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3656,"end":3659}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3653,10 +3653,8 @@\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n-                if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n-                    replaceIndex \u003d i;\n-                }\n+                if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex)\n+\t\t\t\t\treturn false;\n             }\n         }\n         // NOTE: logic mostly below END\n@@ -3678,9 +3676,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3702,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":193,"generationNumber":30,"generationTime":359.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3703,"end":3703}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"24b054cdd840a1415da6365090639efd"},"selectionCount":0,"operation":{"parentIds":[189],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3703,"end":3703}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3703,11 +3700,8 @@\n                 {\n                     continue;\n                 }\n-                tempIndex \u003d text.indexOf(searchList[i], start);\n-\n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":194,"generationNumber":30,"generationTime":79.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return Double.TYPE.equals(toClass);\n","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"382bca32e5d1d0c35c4e7facf804c54e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return Double.TYPE.equals(toClass);\n","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3654,7 +3654,8 @@\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n+                    return Double.TYPE.equals(toClass);\n+\t\t\t\t\ttextIndex \u003d tempIndex;\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":195,"generationNumber":30,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[162,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":196,"generationNumber":30,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,189],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":197,"generationNumber":31,"generationTime":96.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return indexOf(array,valueToFind) !\u003d INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"47699c0eed581397c415f9bb05723c7f"},"selectionCount":0,"operation":{"parentIds":[189],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return indexOf(array,valueToFind) !\u003d INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3634,7 +3634,8 @@\n         // keep track of which still have matches\n         boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n \n-        // index on index that the match was found\n+        return indexOf(array, valueToFind) !\u003d INDEX_NOT_FOUND;\n+\t\t// index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":198,"generationNumber":31,"generationTime":96.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3672,"end":3672}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c3d0450e4cc2d0af340ad6d4ee9cedf7"},"selectionCount":0,"operation":{"parentIds":[162],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3672,"end":3672}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3668,9 +3668,6 @@\n \n         int start \u003d 0;\n \n-        // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n-        int increase \u003d 0;\n-\n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3720,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":199,"generationNumber":31,"generationTime":97.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"23873ffb67416ee4102553ef62126748"},"selectionCount":0,"operation":{"parentIds":[189],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,9 +3631,6 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n-        boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n-\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n@@ -3678,9 +3675,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3701,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":200,"generationNumber":31,"generationTime":84.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return EMPTY_BOOLEAN_ARRAY;\n","lineNumberRange":{"start":3711,"end":3711}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4365d044a051630a8644445914ebffbd"},"selectionCount":0,"operation":{"parentIds":[101],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return EMPTY_BOOLEAN_ARRAY;\n","lineNumberRange":{"start":3711,"end":3711}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3711,7 +3708,8 @@\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n+                        return EMPTY_BOOLEAN_ARRAY;\n+\t\t\t\t\t\treplaceIndex \u003d i;\n                     }\n                 }\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":201,"generationNumber":31,"generationTime":113.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"30ffae8264791b6589dd022e27a0bfb0"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3673,14 +3674,10 @@\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n-            int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":202,"generationNumber":31,"generationTime":34.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[162,189],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":203,"generationNumber":31,"generationTime":34.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,162],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":204,"generationNumber":32,"generationTime":773.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c4b8b9dfbcda649d88a7dc97497d31ad"},"selectionCount":6,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3651,7 +3652,6 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":205,"generationNumber":32,"generationTime":100.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return array;\n","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a6e3b461adfeb61096e3a7a127dbe272"},"selectionCount":0,"operation":{"parentIds":[101],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return array;\n","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3710,7 +3707,8 @@\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n+                        return array;\n+\t\t\t\t\t\ttextIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":206,"generationNumber":32,"generationTime":94.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3672,"end":3672}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[162],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3672,"end":3672}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":207,"generationNumber":32,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3612,"end":3613}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3612,"end":3613}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":208,"generationNumber":32,"generationTime":68.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int inputLength\u003dstr.length();\n","lineNumberRange":{"start":3623,"end":3623}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"411c8842ec924ae9e4216030bf4d98e0"},"selectionCount":0,"operation":{"parentIds":[162],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int inputLength\u003dstr.length();\n","lineNumberRange":{"start":3623,"end":3623}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3620,7 +3620,8 @@\n             throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);\n         }\n \n-        int searchLength \u003d searchList.length;\n+        int inputLength \u003d str.length();\n+\t\tint searchLength \u003d searchList.length;\n         int replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3724,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":209,"generationNumber":32,"generationTime":21.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"03e0415b0bff8c133b011265a809cbe2"},"selectionCount":6,"operation":{"parentIds":[189,162],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3724,7 +3721,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":210,"generationNumber":32,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[189,162],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":211,"generationNumber":33,"generationTime":107.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[204],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":212,"generationNumber":33,"generationTime":66.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3641,"end":3641}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6b65554ce8a7315527df6e873d6be2cf"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3641,"end":3641}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,9 +3636,8 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n-        int tempIndex \u003d -1;\n-\n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n         for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3678,9 +3677,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":213,"generationNumber":33,"generationTime":38.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3619,"end":3619}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[204],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3619,"end":3619}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":214,"generationNumber":33,"generationTime":253.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2f1bcdc2ddbe7a5f9615df6f50d39c85"},"selectionCount":36,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":215,"generationNumber":33,"generationTime":62.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return random(count,true,false);\n","lineNumberRange":{"start":3687,"end":3687}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a46c260055f0f329aa97a7d9d851c5cc"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return random(count,true,false);\n","lineNumberRange":{"start":3687,"end":3687}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,15 +3679,13 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n \n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n+\t\t\t\treturn random(count, true, false);\n             }\n             buf.append(replacementList[replaceIndex]);\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":216,"generationNumber":33,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[209,189],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":217,"generationNumber":33,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[189,209],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":218,"generationNumber":34,"generationTime":72.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"cd1ee7b28872ea333fc927e9052873a0"},"selectionCount":0,"operation":{"parentIds":[204],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3651,7 +3652,6 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3673,14 +3673,10 @@\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n-            int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":219,"generationNumber":34,"generationTime":53.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array.length \u003d\u003d 0","lineNumberRange":{"start":3677,"end":3677}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f01da139fe87d87cc44cf89c16da947a"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array.length \u003d\u003d 0","lineNumberRange":{"start":3677,"end":3677}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3674,7 +3674,7 @@\n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n-            if (greater \u003e 0) {\n+            if (array.length \u003d\u003d 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":220,"generationNumber":34,"generationTime":64.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return \"...\" + abbreviate(str.substring(offset),maxWidth - 3);\n","lineNumberRange":{"start":3698,"end":3715}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"03c682aed47170d1efdeb1535c5dc4a4"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return \"...\" + abbreviate(str.substring(offset),maxWidth - 3);\n","lineNumberRange":{"start":3698,"end":3715}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3697,26 +3695,9 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n-                if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n-                    searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n-                {\n-                    continue;\n-                }\n-                tempIndex \u003d text.indexOf(searchList[i], start);\n+            for (int i \u003d 0; i \u003c searchLength; i++)\n+\t\t\t return \"...\" + abbreviate(str.substring(offset), maxWidth - 3);\n \n-                // see if we need to keep searching for this\n-                if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n-                } else {\n-                    if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n-                    }\n-                }\n-            }\n-            // NOTE: logic duplicated above END\n-\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":221,"generationNumber":34,"generationTime":65.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9c5b689095b0a382dc8c371e6952b20a"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,7 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n+        return INDEX_NOT_FOUND;\n     }\n \n     /**\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":222,"generationNumber":34,"generationTime":138.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end \u003e beg","lineNumberRange":{"start":3644,"end":3644}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"42d1dda35446a219f295bede0a02a9ab"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end \u003e beg","lineNumberRange":{"start":3644,"end":3644}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3641,7 +3641,7 @@\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n-        for (int i \u003d 0; i \u003c searchLength; i++) {\n+        for (int i \u003d 0; end \u003e beg; i++) {\n             if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                 searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n             {\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":223,"generationNumber":34,"generationTime":13.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[209,214],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":224,"generationNumber":34,"generationTime":23.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,204],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":225,"generationNumber":35,"generationTime":63.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3724,"end":3724}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1b29abe34882f7c6b56bc31a02ef6e58"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3724,"end":3724}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3722,7 +3721,6 @@\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }\n-        String result \u003d buf.toString();\n         if (!repeat) {\n             return result;\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":226,"generationNumber":35,"generationTime":268.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3691,"end":3691}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"fac4e5fde108c0b90c33708972431bb4"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3691,"end":3691}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3688,8 +3688,6 @@\n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n             }\n-            buf.append(replacementList[replaceIndex]);\n-\n             start \u003d textIndex + searchList[replaceIndex].length();\n \n             textIndex \u003d -1;\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":227,"generationNumber":35,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"value.equals(nullValue)","lineNumberRange":{"start":3645,"end":3646}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"value.equals(nullValue)","lineNumberRange":{"start":3645,"end":3646}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":228,"generationNumber":35,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch0\u003dstr.charAt(0);\n","lineNumberRange":{"start":3675,"end":3680}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[204],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch0\u003dstr.charAt(0);\n","lineNumberRange":{"start":3675,"end":3680}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":229,"generationNumber":35,"generationTime":65.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str.substring(pos + separator.length());\n","lineNumberRange":{"start":3666,"end":3666}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0fe6888ed2a5f565aaf7059ded9e49e2"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str.substring(pos + separator.length());\n","lineNumberRange":{"start":3666,"end":3666}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3436,6 +3436,7 @@\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n             return text;\n+\t\t\treturn str.substring(pos + separator.length());\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":230,"generationNumber":35,"generationTime":20.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[209,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":231,"generationNumber":35,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[204,209],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":232,"generationNumber":36,"generationTime":20.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":233,"generationNumber":36,"generationTime":64.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The Integer did not match any specified value\");\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"21c1d625675fc74032e9cf88244e5ed9"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The Integer did not match any specified value\");\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tthrow new IllegalArgumentException(\"The Integer did not match any specified value\");\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":234,"generationNumber":36,"generationTime":63.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d9d5dce6ad92f7b349ce564805d39311"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3674,12 +3674,12 @@\n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n+\t\t\treturn result;\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":235,"generationNumber":36,"generationTime":62.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8e49cc0f3883c3fc92990d07a445ba21"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3446,7 +3446,6 @@\n         int increase \u003d replacement.length() - replLength;\n         increase \u003d (increase \u003c 0 ? 0 : increase);\n         increase *\u003d (max \u003c 0 ? 16 : (max \u003e 64 ? 64 : max));\n-        StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n         while (end !\u003d -1) {\n             buf.append(text.substring(start, end)).append(replacement);\n             start \u003d end + replLength;\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":236,"generationNumber":36,"generationTime":74.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3724,"end":3724}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"da7c5edf934f3bbb55ca17163b86f7cc"},"selectionCount":0,"operation":{"parentIds":[204],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3724,"end":3724}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3651,7 +3652,6 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3725,6 +3722,7 @@\n         String result \u003d buf.toString();\n         if (!repeat) {\n             return result;\n+\t\t\treturn null;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":237,"generationNumber":36,"generationTime":20.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":238,"generationNumber":36,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[204,209],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":239,"generationNumber":37,"generationTime":73.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return true;\n","lineNumberRange":{"start":3624,"end":3624}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"cdc4fe8e840ab43185739c62fadeeeac"},"selectionCount":0,"operation":{"parentIds":[204],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return true;\n","lineNumberRange":{"start":3624,"end":3624}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3621,7 +3621,8 @@\n         }\n \n         int searchLength \u003d searchList.length;\n-        int replacementLength \u003d replacementList.length;\n+        return true;\n+\t\tint replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n         if (searchLength !\u003d replacementLength) {\n@@ -3636,6 +3637,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3651,7 +3653,6 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":240,"generationNumber":37,"generationTime":54.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null","lineNumberRange":{"start":3700,"end":3700}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4fa1d1dadf713c7be2ae27d7025f5e39"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null","lineNumberRange":{"start":3700,"end":3700}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3697,7 +3697,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0; str \u003d\u003d null; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":241,"generationNumber":37,"generationTime":64.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"for (E e : enumClass.getEnumConstants()) {\n  map.put(e.name(),e);\n}\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"342b984d5c654135a6617c0ff3c53c1d"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"for (E e : enumClass.getEnumConstants()) {\n  map.put(e.name(),e);\n}\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,7 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n-        int replaceIndex \u003d -1;\n+        for (E e:enumClass.getEnumConstants()){map.put(e.name(),e);}\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":242,"generationNumber":37,"generationTime":54.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str.length() \u003d\u003d 0 || ArrayUtils.isEmpty(set)","lineNumberRange":{"start":3725,"end":3725}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"510a64b769731e2e9bf7ca9049dba514"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str.length() \u003d\u003d 0 || ArrayUtils.isEmpty(set)","lineNumberRange":{"start":3725,"end":3725}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3723,7 +3722,7 @@\n             buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n-        if (!repeat) {\n+        if (str.length() \u003d\u003d 0 || ArrayUtils.isEmpty(set)) {\n             return result;\n         }\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":243,"generationNumber":37,"generationTime":66.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null || suffix \u003d\u003d null","lineNumberRange":{"start":3644,"end":3644}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"14d1cd8bde7040ce4837f8239d994cdc"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null || suffix \u003d\u003d null","lineNumberRange":{"start":3644,"end":3644}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3641,7 +3641,7 @@\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n-        for (int i \u003d 0; i \u003c searchLength; i++) {\n+        for (int i \u003d 0; str \u003d\u003d null || suffix \u003d\u003d null; i++) {\n             if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                 searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n             {\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":244,"generationNumber":37,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[209,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":245,"generationNumber":37,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,209],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":246,"generationNumber":38,"generationTime":71.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d4b926d0aaa807496f5d12f7df3a3499"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3446,7 +3446,6 @@\n         int increase \u003d replacement.length() - replLength;\n         increase \u003d (increase \u003c 0 ? 0 : increase);\n         increase *\u003d (max \u003c 0 ? 16 : (max \u003e 64 ? 64 : max));\n-        StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n         while (end !\u003d -1) {\n             buf.append(text.substring(start, end)).append(replacement);\n             start \u003d end + replLength;\n@@ -3678,8 +3677,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":247,"generationNumber":38,"generationTime":438.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"16db091d8fa5b46e0010f5f3877a6a2e"},"selectionCount":6,"operation":{"parentIds":[209],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3720,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":248,"generationNumber":38,"generationTime":126.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3693,"end":3693}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"ce6b456d32a11ac643a5ec34174c8584"},"selectionCount":0,"operation":{"parentIds":[209],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3693,"end":3693}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3693,7 +3690,7 @@\n             start \u003d textIndex + searchList[replaceIndex].length();\n \n             textIndex \u003d -1;\n-            replaceIndex \u003d -1;\n+            return null;\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n@@ -3724,7 +3721,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":249,"generationNumber":38,"generationTime":130.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3721,"end":3721}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"748d69a4fc14b695fbfdb8f2fafd0807"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3721,"end":3721}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3720,7 +3718,8 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n+            return result;\n+\t\t\tbuf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":250,"generationNumber":38,"generationTime":35.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int m\u003dt.length();\n","lineNumberRange":{"start":3644,"end":3661}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int m\u003dt.length();\n","lineNumberRange":{"start":3644,"end":3661}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":251,"generationNumber":38,"generationTime":39.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c0222274bbebd40684fa29a44a635ad4"},"selectionCount":1,"operation":{"parentIds":[107,204],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3651,7 +3652,6 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":252,"generationNumber":38,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":253,"generationNumber":39,"generationTime":91.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"System.arraycopy(array,startIndexInclusive,subarray,0,newSize);\n","lineNumberRange":{"start":3705,"end":3705}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"cecccf514e626ea47cb35fc828e7d20d"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"System.arraycopy(array,startIndexInclusive,subarray,0,newSize);\n","lineNumberRange":{"start":3705,"end":3705}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3704,10 +3703,10 @@\n                     continue;\n                 }\n                 tempIndex \u003d text.indexOf(searchList[i], start);\n+\t\t\t\tSystem.arraycopy(array, startIndexInclusive, subarray, 0, newSize);\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":254,"generationNumber":39,"generationTime":213.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3714,"end":3714}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8f8dbcaecd04e21d15b2e4af1effe6b1"},"selectionCount":0,"operation":{"parentIds":[251],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3714,"end":3714}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3651,7 +3652,6 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3711,7 +3711,7 @@\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n+                        return INDEX_NOT_FOUND;\n                     }\n                 }\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":255,"generationNumber":39,"generationTime":395.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3658,"end":3658}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"59b44135df95f3c7da5a56e4d6b115db"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3658,"end":3658}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3654,7 +3655,6 @@\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":256,"generationNumber":39,"generationTime":214.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Double b\u003darray[i];\n","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e6b1cef67eb139568cac1361127ee22d"},"selectionCount":0,"operation":{"parentIds":[247],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Double b\u003darray[i];\n","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3654,7 +3654,7 @@\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n+                    Double b \u003d array[i];\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3720,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":257,"generationNumber":39,"generationTime":114.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3721,"end":3721}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9f0dfe479dc51ee04836fea2781691e9"},"selectionCount":0,"operation":{"parentIds":[247],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3721,"end":3721}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3722,9 +3718,7 @@\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }\n-        String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":258,"generationNumber":39,"generationTime":41.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"647da964a829cd21db5ad1aeca1ebd2a"},"selectionCount":0,"operation":{"parentIds":[247,251],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3651,7 +3652,6 @@\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n-                noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n@@ -3694,7 +3694,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":259,"generationNumber":39,"generationTime":29.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"3fbea943b5b70f71b876ba1dae464ce4"},"selectionCount":1,"operation":{"parentIds":[214,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":260,"generationNumber":40,"generationTime":119.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3623,"end":3623}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"10bcd804fb463ae4c892f16bbcc0017a"},"selectionCount":0,"operation":{"parentIds":[247],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3623,"end":3623}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3620,7 +3620,6 @@\n             throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);\n         }\n \n-        int searchLength \u003d searchList.length;\n         int replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n@@ -3678,9 +3677,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3690,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3719,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":261,"generationNumber":40,"generationTime":194.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c40013a7ce71480063dd4d9469500c3f"},"selectionCount":0,"operation":{"parentIds":[259],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,6 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":262,"generationNumber":40,"generationTime":23.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"buf.append(ch);\n","lineNumberRange":{"start":3657,"end":3660}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[259],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"buf.append(ch);\n","lineNumberRange":{"start":3657,"end":3660}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":263,"generationNumber":40,"generationTime":312.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3704,"end":3704}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8f0a7aa413f17b8070cfc06260d61626"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3704,"end":3704}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3703,8 +3701,6 @@\n                 {\n                     continue;\n                 }\n-                tempIndex \u003d text.indexOf(searchList[i], start);\n-\n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n                     noMoreMatchesForReplIndex[i] \u003d true;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":264,"generationNumber":40,"generationTime":65.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return indexOf(array,valueToFind,0,tolerance);\n","lineNumberRange":{"start":3693,"end":3693}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"980f9b9fc81d4d7aa967344d35123f88"},"selectionCount":0,"operation":{"parentIds":[259],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return indexOf(array,valueToFind,0,tolerance);\n","lineNumberRange":{"start":3693,"end":3693}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3691,6 +3691,7 @@\n             buf.append(replacementList[replaceIndex]);\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n+\t\t\treturn indexOf(array, valueToFind, 0, tolerance);\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":265,"generationNumber":40,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"690e63e96c758d324e43c19451487533"},"selectionCount":2,"operation":{"parentIds":[247,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":266,"generationNumber":40,"generationTime":10.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,214],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":267,"generationNumber":41,"generationTime":91.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return;\n","lineNumberRange":{"start":3712,"end":3712}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"eb6d95af59862002d4046a22e3ccbb16"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return;\n","lineNumberRange":{"start":3712,"end":3712}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3711,7 +3709,8 @@\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n+                        return;\n+\t\t\t\t\t\treplaceIndex \u003d i;\n                     }\n                 }\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":268,"generationNumber":41,"generationTime":196.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4e10bdf27494cb826b4442d71b076223"},"selectionCount":0,"operation":{"parentIds":[265],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3673,14 +3673,10 @@\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n-            int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3690,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":269,"generationNumber":41,"generationTime":42.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int index\u003dINDEX_NOT_FOUND;\n","lineNumberRange":{"start":3675,"end":3680}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[247],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int index\u003dINDEX_NOT_FOUND;\n","lineNumberRange":{"start":3675,"end":3680}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":270,"generationNumber":41,"generationTime":402.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3688,"end":3688}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4c49255ddf13f96fc3a78f461066b0f8"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3688,"end":3688}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,15 +3678,13 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n \n             for (int i \u003d start; i \u003c textIndex; i++) {\n-                buf.append(text.charAt(i));\n             }\n             buf.append(replacementList[replaceIndex]);\n \n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":271,"generationNumber":41,"generationTime":89.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return countries;\n","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"eba67c7118a9a566e38d1068d0b7fb0a"},"selectionCount":0,"operation":{"parentIds":[265],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return countries;\n","lineNumberRange":{"start":3723,"end":3723}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3725,6 +3721,7 @@\n         String result \u003d buf.toString();\n         if (!repeat) {\n             return result;\n+\t\t\treturn countries;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":272,"generationNumber":41,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[247,265],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":273,"generationNumber":41,"generationTime":27.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[247,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":274,"generationNumber":42,"generationTime":43.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":275,"generationNumber":42,"generationTime":99.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return squeeze(str,strs);\n","lineNumberRange":{"start":3624,"end":3624}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a4e5a53fc28be2aa58eab74c4388d1f1"},"selectionCount":0,"operation":{"parentIds":[265],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return squeeze(str,strs);\n","lineNumberRange":{"start":3624,"end":3624}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3621,7 +3621,8 @@\n         }\n \n         int searchLength \u003d searchList.length;\n-        int replacementLength \u003d replacementList.length;\n+        return squeeze(str, strs);\n+\t\tint replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n         if (searchLength !\u003d replacementLength) {\n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":276,"generationNumber":42,"generationTime":99.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return ch - 48;\n","lineNumberRange":{"start":3721,"end":3721}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f7a4a9d7078fb22da990427e3d6cb646"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return ch - 48;\n","lineNumberRange":{"start":3721,"end":3721}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3720,7 +3718,7 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n+            return ch - 48;\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":277,"generationNumber":42,"generationTime":416.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"669f2bc52e332043df403fa95b84f64b"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9393939393939394,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3678,8 +3677,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":278,"generationNumber":42,"generationTime":100.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"StringUtils.isEmpty(str) || StringUtils.isEmpty(set)","lineNumberRange":{"start":3653,"end":3653}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2c1756477ff7e230a38116bd3dd2fc44"},"selectionCount":0,"operation":{"parentIds":[265],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"StringUtils.isEmpty(str) || StringUtils.isEmpty(set)","lineNumberRange":{"start":3653,"end":3653}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3650,7 +3650,7 @@\n             tempIndex \u003d text.indexOf(searchList[i]);\n \n             // see if we need to keep searching for this\n-            if (tempIndex \u003d\u003d -1) {\n+            if (StringUtils.isEmpty(str) || StringUtils.isEmpty(set)) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":279,"generationNumber":42,"generationTime":43.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a32eaf3c66a4ff3d29b1bba65f84eb43"},"selectionCount":8,"operation":{"parentIds":[107,247],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3724,7 +3722,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":280,"generationNumber":42,"generationTime":32.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[265,247],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":281,"generationNumber":43,"generationTime":78.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"invalidChars[j] \u003d\u003d ch","lineNumberRange":{"start":3656,"end":3656}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"87130693ff209bb820c19b586c84dd36"},"selectionCount":0,"operation":{"parentIds":[247],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"invalidChars[j] \u003d\u003d ch","lineNumberRange":{"start":3656,"end":3656}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3653,7 +3653,7 @@\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n-                if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n+                if (invalidChars[j] \u003d\u003d ch) {\n                     textIndex \u003d tempIndex;\n                     replaceIndex \u003d i;\n                 }\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3720,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":282,"generationNumber":43,"generationTime":266.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"334701d455ece0a4e4e0fa5037ea4fce"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3654,7 +3654,6 @@\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":283,"generationNumber":43,"generationTime":142.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return true;\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"323bffc22b15921a9bf48210e3bd6940"},"selectionCount":0,"operation":{"parentIds":[279],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return true;\n","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3446,7 +3446,8 @@\n         int increase \u003d replacement.length() - replLength;\n         increase \u003d (increase \u003c 0 ? 0 : increase);\n         increase *\u003d (max \u003c 0 ? 16 : (max \u003e 64 ? 64 : max));\n-        StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n+        return true;\n+\t\tStringBuilder buf \u003d new StringBuilder(text.length() + increase);\n         while (end !\u003d -1) {\n             buf.append(text.substring(start, end)).append(replacement);\n             start \u003d end + replLength;\n@@ -3636,6 +3637,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3680,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3724,7 +3723,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":284,"generationNumber":43,"generationTime":62.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return buf.toString();\n","lineNumberRange":{"start":3641,"end":3641}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8f73cb656172a733d57c063c5cc4e3c9"},"selectionCount":0,"operation":{"parentIds":[107],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return buf.toString();\n","lineNumberRange":{"start":3641,"end":3641}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,8 +3636,10 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n+\t\treturn buf.toString();\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n@@ -3678,9 +3680,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":285,"generationNumber":43,"generationTime":71.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex\u003d0;\n","lineNumberRange":{"start":3688,"end":3688}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9ad6fd8e471dc3c112d657d918e34e1d"},"selectionCount":0,"operation":{"parentIds":[247],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex\u003d0;\n","lineNumberRange":{"start":3688,"end":3688}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3688,13 +3685,12 @@\n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n             }\n-            buf.append(replacementList[replaceIndex]);\n+            startIndex \u003d 0;\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3720,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":286,"generationNumber":43,"generationTime":19.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":287,"generationNumber":43,"generationTime":18.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,247],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":288,"generationNumber":44,"generationTime":62.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str2.substring(at);\n","lineNumberRange":{"start":3724,"end":3724}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"272a10389735d74b3fa63d413317c834"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str2.substring(at);\n","lineNumberRange":{"start":3724,"end":3724}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3722,7 +3721,7 @@\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }\n-        String result \u003d buf.toString();\n+        return str2.substring(at);\n         if (!repeat) {\n             return result;\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":289,"generationNumber":44,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"break;\n","lineNumberRange":{"start":3696,"end":3713}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[247],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"break;\n","lineNumberRange":{"start":3696,"end":3713}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":290,"generationNumber":44,"generationTime":33.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"increase\u003dMath.min(increase,text.length() / 5);\n","lineNumberRange":{"start":3698,"end":3715}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[279],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"increase\u003dMath.min(increase,text.length() / 5);\n","lineNumberRange":{"start":3698,"end":3715}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":291,"generationNumber":44,"generationTime":83.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"padStr\u003d\" \";\n","lineNumberRange":{"start":3688,"end":3688}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e6859ed8dd9b1a28f5770aeb1dfada94"},"selectionCount":0,"operation":{"parentIds":[247],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"padStr\u003d\" \";\n","lineNumberRange":{"start":3688,"end":3688}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3688,13 +3685,12 @@\n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n             }\n-            buf.append(replacementList[replaceIndex]);\n+            padStr \u003d \" \";\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3720,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":292,"generationNumber":44,"generationTime":33.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3644,"end":3661}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3644,"end":3661}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":293,"generationNumber":44,"generationTime":32.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[279,247],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":294,"generationNumber":44,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"01e9807f097a5dea9ac79ab81b377e56"},"selectionCount":13,"operation":{"parentIds":[214,247],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":295,"generationNumber":45,"generationTime":27.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":296,"generationNumber":45,"generationTime":43.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"ArrayUtils.isEmpty(array)","lineNumberRange":{"start":3684,"end":3684}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[279],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"ArrayUtils.isEmpty(array)","lineNumberRange":{"start":3684,"end":3684}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":297,"generationNumber":45,"generationTime":93.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3673,"end":3673}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2bd1ba6b62ab720b137229855b040c37"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3673,"end":3673}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3668,8 +3669,7 @@\n \n         int start \u003d 0;\n \n-        // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n-        int increase \u003d 0;\n+        return INDEX_NOT_FOUND;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":298,"generationNumber":45,"generationTime":163.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3697,"end":3698}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3697,"end":3698}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":299,"generationNumber":45,"generationTime":86.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The InputStream must not be null\");\n","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0ec0b80f12990e0f15bcea01e294a3bc"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(\"The InputStream must not be null\");\n","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,7 +3631,8 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n+        throw new IllegalArgumentException(\"The InputStream must not be null\");\n+\t\t// keep track of which still have matches\n         boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n \n         // index on index that the match was found\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":300,"generationNumber":45,"generationTime":14.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,294],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":301,"generationNumber":45,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,107],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":302,"generationNumber":46,"generationTime":76.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3701,"end":3702}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"12ee4364f8330fad8e92a12653df682e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3701,"end":3702}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3698,8 +3698,7 @@\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n-                if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n-                    searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n+                if (array \u003d\u003d null) \n                 {\n                     continue;\n                 }\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":303,"generationNumber":46,"generationTime":61.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3715}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[279],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3698,"end":3715}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":304,"generationNumber":46,"generationTime":75.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"index \u003d\u003d INDEX_NOT_FOUND","lineNumberRange":{"start":3685,"end":3685}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"23cbf379fe9be990e675755e005a7312"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"index \u003d\u003d INDEX_NOT_FOUND","lineNumberRange":{"start":3685,"end":3685}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,14 +3678,11 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n \n-            for (int i \u003d start; i \u003c textIndex; i++) {\n+            for (int i \u003d start; index \u003d\u003d INDEX_NOT_FOUND; i++) {\n                 buf.append(text.charAt(i));\n             }\n             buf.append(replacementList[replaceIndex]);\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":305,"generationNumber":46,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"overlay \u003d\u003d null","lineNumberRange":{"start":3697,"end":3698}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"overlay \u003d\u003d null","lineNumberRange":{"start":3697,"end":3698}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":306,"generationNumber":46,"generationTime":75.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cLocale\u003e locales\u003davailableLocaleList();\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"7504611a38f94855935124b68a0665af"},"selectionCount":0,"operation":{"parentIds":[279],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cLocale\u003e locales\u003davailableLocaleList();\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tList\u003cLocale\u003e locales\u003davailableLocaleList();\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3724,7 +3722,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":307,"generationNumber":46,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294,214],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":308,"generationNumber":46,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,279],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":309,"generationNumber":47,"generationTime":77.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"try {\n  primitive\u003dArrayUtils.toPrimitive(array);\n}\n catch (NullPointerException ex) {\n  throw new IllegalArgumentException(\"The array must not contain any null elements\");\n}\n","lineNumberRange":{"start":3670,"end":3670}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"62cd0ec9e56b3a1307d76eeb7fb462ad"},"selectionCount":0,"operation":{"parentIds":[279],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"try {\n  primitive\u003dArrayUtils.toPrimitive(array);\n}\n catch (NullPointerException ex) {\n  throw new IllegalArgumentException(\"The array must not contain any null elements\");\n}\n","lineNumberRange":{"start":3670,"end":3670}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -486,7 +486,12 @@\n         if (str \u003d\u003d null || (strLen \u003d str.length()) \u003d\u003d 0) {\n             return str;\n         }\n-        int start \u003d 0;\n+        try {\n+\t\t\tprimitive \u003d ArrayUtils.toPrimitive(array);\n+\t\t} catch (NullPointerException ex) {\n+\t\t\tthrow new IllegalArgumentException(\"The array must not contain any null elements\");\n+\t\t}\n+\t\tint start \u003d 0;\n         if (stripChars \u003d\u003d null) {\n             while ((start !\u003d strLen) \u0026\u0026 Character.isWhitespace(str.charAt(start))) {\n                 start++;\n@@ -3636,6 +3641,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3684,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3724,7 +3727,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":310,"generationNumber":47,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3612,"end":3613}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3612,"end":3613}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":311,"generationNumber":47,"generationTime":35.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"String quoteless\u003dinput.subSequence(1,input.length() - 1).toString();\n","lineNumberRange":{"start":3676,"end":3681}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"String quoteless\u003dinput.subSequence(1,input.length() - 1).toString();\n","lineNumberRange":{"start":3676,"end":3681}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":312,"generationNumber":47,"generationTime":73.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(String.format(message,value));\n","lineNumberRange":{"start":3725,"end":3725}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"da07ae35a4e31bfeb1b4fe0db5620c13"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"throw new IllegalArgumentException(String.format(message,value));\n","lineNumberRange":{"start":3725,"end":3725}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3722,8 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n+            throw new IllegalArgumentException(String.format(message, value));\n+\t\t\treturn result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":313,"generationNumber":47,"generationTime":40.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3675,"end":3680}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3675,"end":3680}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":314,"generationNumber":47,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,279],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":315,"generationNumber":47,"generationTime":30.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,279],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":316,"generationNumber":48,"generationTime":71.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3708,"end":3708}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d5330ecc24656d38eb2ec81d79a44d3b"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3708,"end":3708}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,10 +3703,9 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n+                        return null;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":317,"generationNumber":48,"generationTime":250.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3722,"end":3722}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6e5024d997e849ac4bab2bf53cf7b324"},"selectionCount":0,"operation":{"parentIds":[8],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3722,"end":3722}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3720,7 +3719,6 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":318,"generationNumber":48,"generationTime":257.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6fac42931a407178d45323d44cbc6324"},"selectionCount":32,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":319,"generationNumber":48,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null","lineNumberRange":{"start":3653,"end":3653}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[8],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"str \u003d\u003d null","lineNumberRange":{"start":3653,"end":3653}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":320,"generationNumber":48,"generationTime":262.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3699,"end":3699}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1a89c9427eac631d98f0eca28b409f6c"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3699,"end":3699}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3697,7 +3696,7 @@\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0;; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":321,"generationNumber":48,"generationTime":10.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,107],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":322,"generationNumber":48,"generationTime":10.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[279,107],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":323,"generationNumber":49,"generationTime":64.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return i;\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b63fc66dde86117abaf27ab1efabf8d3"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return i;\n","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3446,7 +3446,7 @@\n         int increase \u003d replacement.length() - replLength;\n         increase \u003d (increase \u003c 0 ? 0 : increase);\n         increase *\u003d (max \u003c 0 ? 16 : (max \u003e 64 ? 64 : max));\n-        StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n+        return i;\n         while (end !\u003d -1) {\n             buf.append(text.substring(start, end)).append(replacement);\n             start \u003d end + replLength;\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":324,"generationNumber":49,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c str.length()","lineNumberRange":{"start":3656,"end":3656}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c str.length()","lineNumberRange":{"start":3656,"end":3656}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":325,"generationNumber":49,"generationTime":69.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"String searchString\u003dsearchStrings[i];\n","lineNumberRange":{"start":3709,"end":3709}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"badb7d4ad4a0f75757c3e464141323c8"},"selectionCount":0,"operation":{"parentIds":[294],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"String searchString\u003dsearchStrings[i];\n","lineNumberRange":{"start":3709,"end":3709}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,11 +3703,11 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n+                        String searchString \u003d searchStrings[i];\n+\t\t\t\t\t\treplaceIndex \u003d i;\n                     }\n                 }\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":326,"generationNumber":49,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3645,"end":3662}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3645,"end":3662}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":327,"generationNumber":49,"generationTime":70.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3716,"end":3716}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4b95860a407f88d36d0fd48e6efb0856"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3716,"end":3716}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3718,7 +3713,7 @@\n             // NOTE: logic duplicated above END\n \n         }\n-        int textLength \u003d text.length();\n+        return null;\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":328,"generationNumber":49,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,294],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":329,"generationNumber":49,"generationTime":18.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":330,"generationNumber":50,"generationTime":38.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3699,"end":3700}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[279],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3699,"end":3700}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":331,"generationNumber":50,"generationTime":63.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Object[] values2\u003dArrayUtils.add(values,i);\n","lineNumberRange":{"start":3651,"end":3651}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c31fafd82d5827fbf24717594e969412"},"selectionCount":0,"operation":{"parentIds":[107],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Object[] values2\u003dArrayUtils.add(values,i);\n","lineNumberRange":{"start":3651,"end":3651}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3647,7 +3648,7 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n+            Object[] values2 \u003d ArrayUtils.add(values, i);\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":332,"generationNumber":50,"generationTime":30.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"stripChars \u003d\u003d null","lineNumberRange":{"start":3686,"end":3686}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[279],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"stripChars \u003d\u003d null","lineNumberRange":{"start":3686,"end":3686}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":333,"generationNumber":50,"generationTime":100.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex \u003e\u003d array.length","lineNumberRange":{"start":3627,"end":3627}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex \u003e\u003d array.length","lineNumberRange":{"start":3627,"end":3627}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":334,"generationNumber":50,"generationTime":76.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return getClass(className,true);\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a80bbc26a47e19ac1e7d699b9387e40b"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return getClass(className,true);\n","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3634,8 +3634,7 @@\n         // keep track of which still have matches\n         boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n \n-        // index on index that the match was found\n-        int textIndex \u003d -1;\n+        return getClass(className, true);\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3677,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3690,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3702,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":335,"generationNumber":50,"generationTime":41.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"849c3da80cea10957bc174a31c021181"},"selectionCount":16,"operation":{"parentIds":[279,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3724,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":336,"generationNumber":50,"generationTime":28.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[107,279],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":337,"generationNumber":51,"generationTime":89.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"chars.length() \u003d\u003d 0","lineNumberRange":{"start":3665,"end":3665}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"75236eefd2488a0db5026e3bdf3bbcbe"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"chars.length() \u003d\u003d 0","lineNumberRange":{"start":3665,"end":3665}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3662,7 +3662,7 @@\n         // NOTE: logic mostly below END\n \n         // no search strings found, we are done\n-        if (textIndex \u003d\u003d -1) {\n+        if (chars.length() \u003d\u003d 0) {\n             return text;\n         }\n \n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":338,"generationNumber":51,"generationTime":215.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"t_j\u003dt.charAt(j - 1);\n","lineNumberRange":{"start":3641,"end":3641}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"31a0938ddadf9b0b5a9efd0a4128175e"},"selectionCount":0,"operation":{"parentIds":[335],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"t_j\u003dt.charAt(j - 1);\n","lineNumberRange":{"start":3641,"end":3641}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,8 +3636,10 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n-        int tempIndex \u003d -1;\n+        t_j \u003d t.charAt(j - 1);\n+\t\tint tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n@@ -3694,7 +3696,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3725,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":339,"generationNumber":51,"generationTime":42.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3645,"end":3646}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3645,"end":3646}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":340,"generationNumber":51,"generationTime":41.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3665,"end":3665}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3665,"end":3665}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":341,"generationNumber":51,"generationTime":43.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"result.append(str.substring(0,upper));\n","lineNumberRange":{"start":3684,"end":3717}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"result.append(str.substring(0,upper));\n","lineNumberRange":{"start":3684,"end":3717}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":342,"generationNumber":51,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9b69e1fa8fb0ba61c9deb81ad27a27e8"},"selectionCount":7,"operation":{"parentIds":[214,294],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3694,7 +3694,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":343,"generationNumber":51,"generationTime":35.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,294],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":344,"generationNumber":52,"generationTime":109.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"@SuppressWarnings(\"unchecked\") Range\u003cT\u003e range\u003d(Range\u003cT\u003e)obj;\n","lineNumberRange":{"start":3708,"end":3708}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"69b40968dbe82c847c9f2b134250c2d4"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"@SuppressWarnings(\"unchecked\") Range\u003cT\u003e range\u003d(Range\u003cT\u003e)obj;\n","lineNumberRange":{"start":3708,"end":3708}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,10 +3703,9 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n+                        @SuppressWarnings(\"unchecked\") Range\u003cT\u003e range\u003d(Range\u003cT\u003e)obj;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":345,"generationNumber":52,"generationTime":93.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3725,"end":3725}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c8c342793f4b9867f5c8ee8f3229857a"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3725,"end":3725}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3725,6 +3723,7 @@\n         String result \u003d buf.toString();\n         if (!repeat) {\n             return result;\n+\t\t\treturn result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":346,"generationNumber":52,"generationTime":137.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3699,"end":3715}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[342],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3699,"end":3715}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":347,"generationNumber":52,"generationTime":43.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3615,"end":3615}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3615,"end":3615}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":348,"generationNumber":52,"generationTime":56.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3681}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3681}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":349,"generationNumber":52,"generationTime":14.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[342,335],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":350,"generationNumber":52,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":351,"generationNumber":53,"generationTime":80433.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3691,"end":3691}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0c90fb4130e8e3e5fcc8e08d089c8ed1"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3691,"end":3691}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3690,11 +3688,8 @@\n             }\n             buf.append(replacementList[replaceIndex]);\n \n-            start \u003d textIndex + searchList[replaceIndex].length();\n-\n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":352,"generationNumber":53,"generationTime":89.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return substrings.toArray(new String[substrings.size()]);\n","lineNumberRange":{"start":3711,"end":3711}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1f8a433127a9e076d16913d1a5f7946c"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return substrings.toArray(new String[substrings.size()]);\n","lineNumberRange":{"start":3711,"end":3711}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,10 +3706,9 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n+                        return substrings.toArray(new String[substrings.size()]);\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":353,"generationNumber":53,"generationTime":73.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"for (Class\u003c?\u003e candidateClass : candidateClasses) {\n  if (!Modifier.isPublic(candidateClass.getModifiers())) {\n    continue;\n  }\n  Method candidateMethod;\n  try {\n    candidateMethod\u003dcandidateClass.getMethod(methodName,parameterTypes);\n  }\n catch (  NoSuchMethodException ex) {\n    continue;\n  }\n  if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {\n    return candidateMethod;\n  }\n}\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0f9daadb4da51b8e474bbab9ab91ac38"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"for (Class\u003c?\u003e candidateClass : candidateClasses) {\n  if (!Modifier.isPublic(candidateClass.getModifiers())) {\n    continue;\n  }\n  Method candidateMethod;\n  try {\n    candidateMethod\u003dcandidateClass.getMethod(methodName,parameterTypes);\n  }\n catch (  NoSuchMethodException ex) {\n    continue;\n  }\n  if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {\n    return candidateMethod;\n  }\n}\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,7 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n+        for (Class\u003c?\u003e candidateClass:candidateClasses){if (!Modifier.isPublic(candidateClass.getModifiers())){continue;}Method candidateMethod;try {candidateMethod\u003dcandidateClass.getMethod(methodName,parameterTypes);} catch (NoSuchMethodException ex){continue;}if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())){return candidateMethod;}}\n     }\n \n     /**\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":354,"generationNumber":53,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3685,"end":3718}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3685,"end":3718}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":355,"generationNumber":53,"generationTime":64.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Class\u003c?\u003e[] convertedClasses\u003dnew Class[classes.length];\n","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"c578702562435037d6da146272a648db"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Class\u003c?\u003e[] convertedClasses\u003dnew Class[classes.length];\n","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3654,7 +3654,7 @@\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n+                    Class\u003c?\u003e[] convertedClasses\u003dnew Class[classes.length];\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":356,"generationNumber":53,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":357,"generationNumber":53,"generationTime":30.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,335],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":358,"generationNumber":54,"generationTime":69.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  char ch\u003dstr.charAt(i);\n  if (isDelimiter(ch,delimiters)) {\n    buffer.append(ch);\n    uncapitalizeNext\u003dtrue;\n  }\n else   if (uncapitalizeNext) {\n    buffer.append(Character.toLowerCase(ch));\n    uncapitalizeNext\u003dfalse;\n  }\n else {\n    buffer.append(ch);\n  }\n}\n","lineNumberRange":{"start":3669,"end":3669}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"440ba70d66a08f2fe16d8d5b0141fcd6"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  char ch\u003dstr.charAt(i);\n  if (isDelimiter(ch,delimiters)) {\n    buffer.append(ch);\n    uncapitalizeNext\u003dtrue;\n  }\n else   if (uncapitalizeNext) {\n    buffer.append(Character.toLowerCase(ch));\n    uncapitalizeNext\u003dfalse;\n  }\n else {\n    buffer.append(ch);\n  }\n}\n","lineNumberRange":{"start":3669,"end":3669}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -486,7 +486,18 @@\n         if (str \u003d\u003d null || (strLen \u003d str.length()) \u003d\u003d 0) {\n             return str;\n         }\n-        int start \u003d 0;\n+        {\n+\t\t\tchar ch \u003d str.charAt(i);\n+\t\t\tif (isDelimiter(ch, delimiters)) {\n+\t\t\t\tbuffer.append(ch);\n+\t\t\t\tuncapitalizeNext \u003d true;\n+\t\t\t} else if (uncapitalizeNext) {\n+\t\t\t\tbuffer.append(Character.toLowerCase(ch));\n+\t\t\t\tuncapitalizeNext \u003d false;\n+\t\t\t} else {\n+\t\t\t\tbuffer.append(ch);\n+\t\t\t}\n+\t\t}\n         if (stripChars \u003d\u003d null) {\n             while ((start !\u003d strLen) \u0026\u0026 Character.isWhitespace(str.charAt(start))) {\n                 start++;\n@@ -3678,8 +3689,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3717,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":359,"generationNumber":54,"generationTime":71.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0a57ac9ac351f00e4372b6e0ac24c623"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3446,7 +3446,6 @@\n         int increase \u003d replacement.length() - replLength;\n         increase \u003d (increase \u003c 0 ? 0 : increase);\n         increase *\u003d (max \u003c 0 ? 16 : (max \u003e 64 ? 64 : max));\n-        StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n         while (end !\u003d -1) {\n             buf.append(text.substring(start, end)).append(replacement);\n             start \u003d end + replLength;\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":360,"generationNumber":54,"generationTime":274.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003e\u003d 0","lineNumberRange":{"start":3653,"end":3653}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"733570c38950c7fe824b764a43e1b3ca"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003e\u003d 0","lineNumberRange":{"start":3653,"end":3653}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3650,7 +3650,7 @@\n             tempIndex \u003d text.indexOf(searchList[i]);\n \n             // see if we need to keep searching for this\n-            if (tempIndex \u003d\u003d -1) {\n+            if (i \u003e\u003d 0) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":361,"generationNumber":54,"generationTime":68.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"for (CharRange range : set) {\n  if (range.contains(ch)) {\n    return true;\n  }\n}\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4c377c87dd58f0c399f993fd98400c1f"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"for (CharRange range : set) {\n  if (range.contains(ch)) {\n    return true;\n  }\n}\n","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tfor (CharRange range:set){if (range.contains(ch)){return true;}}\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":362,"generationNumber":54,"generationTime":265.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a047894b6feb0ea0abc345479768a01f"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3654,7 +3654,6 @@\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3678,8 +3677,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":363,"generationNumber":54,"generationTime":21.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318,294],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":364,"generationNumber":54,"generationTime":34.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318,342],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":365,"generationNumber":55,"generationTime":43.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3696,"end":3712}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3696,"end":3712}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":366,"generationNumber":55,"generationTime":72.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3623,"end":3623}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"7283a5540c1e7391461655ad79f30a51"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3623,"end":3623}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3620,7 +3620,6 @@\n             throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);\n         }\n \n-        int searchLength \u003d searchList.length;\n         int replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n@@ -3678,8 +3677,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":367,"generationNumber":55,"generationTime":69.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return splitWorker(str,separatorChars,max,true);\n","lineNumberRange":{"start":3725,"end":3725}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d07d9043f11e9569076a1ab17db089f7"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return splitWorker(str,separatorChars,max,true);\n","lineNumberRange":{"start":3725,"end":3725}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3722,7 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n+            return splitWorker(str, separatorChars, max, true);\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":368,"generationNumber":55,"generationTime":64.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"05c83c6a7f0a94e8d5f62c03469d095a"},"selectionCount":0,"operation":{"parentIds":[342],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,8 +3631,7 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n-        boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n+        return str;\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":369,"generationNumber":55,"generationTime":27.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[342],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":370,"generationNumber":55,"generationTime":18.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294,342],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":371,"generationNumber":55,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294,342],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":372,"generationNumber":56,"generationTime":72.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"superclass !\u003d null","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2a3840d2b813ab2124db145967ab69ce"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"superclass !\u003d null","lineNumberRange":{"start":3683,"end":3683}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,12 +3678,9 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n-        while (textIndex !\u003d -1) {\n+        while (superclass !\u003d null) {\n \n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":373,"generationNumber":56,"generationTime":77.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"chars.contains(chrs[i])","lineNumberRange":{"start":3689,"end":3689}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"11671e3df99d0b226231049c266617d4"},"selectionCount":0,"operation":{"parentIds":[335],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"chars.contains(chrs[i])","lineNumberRange":{"start":3689,"end":3689}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3685,7 +3686,7 @@\n \n         while (textIndex !\u003d -1) {\n \n-            for (int i \u003d start; i \u003c textIndex; i++) {\n+            for (int i \u003d start; chars.contains(chrs[i]); i++) {\n                 buf.append(text.charAt(i));\n             }\n             buf.append(replacementList[replaceIndex]);\n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3724,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":374,"generationNumber":56,"generationTime":77.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c array.length","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f9c3aa42e16bf79d7fc709e28f8f09f2"},"selectionCount":0,"operation":{"parentIds":[335],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c array.length","lineNumberRange":{"start":3726,"end":3726}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3723,8 +3723,7 @@\n             buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n-        if (!repeat) {\n-            return result;\n+        if (i \u003c array.length) {\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":375,"generationNumber":56,"generationTime":74.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"tmp\u003dch;\n","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0d2dd500f9c07ebe3b05aa6dc4673eeb"},"selectionCount":0,"operation":{"parentIds":[318],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"tmp\u003dch;\n","lineNumberRange":{"start":3694,"end":3694}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,7 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n+\t\t\ttmp \u003d ch;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":376,"generationNumber":56,"generationTime":73.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return noNullElements(array,DEFAULT_NO_NULL_ELEMENTS_ARRAY_EXCEPTION_MESSAGE);\n","lineNumberRange":{"start":3722,"end":3722}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5af69bcffede41480e60a4f982c9ff65"},"selectionCount":0,"operation":{"parentIds":[294],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return noNullElements(array,DEFAULT_NO_NULL_ELEMENTS_ARRAY_EXCEPTION_MESSAGE);\n","lineNumberRange":{"start":3722,"end":3722}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3719,7 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n+            return noNullElements(array, DEFAULT_NO_NULL_ELEMENTS_ARRAY_EXCEPTION_MESSAGE);\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":377,"generationNumber":56,"generationTime":29.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[335,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":378,"generationNumber":56,"generationTime":20.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[342,318],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":379,"generationNumber":57,"generationTime":67.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"len \u003c 0 || pos \u003e str.length()","lineNumberRange":{"start":3685,"end":3685}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1ff03078f6c9abedbcaade2ba84bda3f"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"len \u003c 0 || pos \u003e str.length()","lineNumberRange":{"start":3685,"end":3685}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,12 +3678,11 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n-        while (textIndex !\u003d -1) {\n+        while (len \u003c 0 || pos \u003e str.length()) {\n \n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":380,"generationNumber":57,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"toClassArray \u003d\u003d null","lineNumberRange":{"start":3686,"end":3686}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[342],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"toClassArray \u003d\u003d null","lineNumberRange":{"start":3686,"end":3686}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":381,"generationNumber":57,"generationTime":85.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex\u003darray.length - 1;\n","lineNumberRange":{"start":3718,"end":3718}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e75cea4d3350880bcff33a91fe9db496"},"selectionCount":0,"operation":{"parentIds":[294],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex\u003darray.length - 1;\n","lineNumberRange":{"start":3718,"end":3718}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3720,7 +3715,8 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n+            startIndex \u003d array.length - 1;\n+\t\t\tbuf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":382,"generationNumber":57,"generationTime":78.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3624,"end":3624}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9cfa3fc057b2519492b456050670659a"},"selectionCount":0,"operation":{"parentIds":[342],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3624,"end":3624}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3621,8 +3621,6 @@\n         }\n \n         int searchLength \u003d searchList.length;\n-        int replacementLength \u003d replacementList.length;\n-\n         // make sure lengths are ok, these need to be equal\n         if (searchLength !\u003d replacementLength) {\n             throw new IllegalArgumentException(\"Search and Replace array lengths don\u0027t match: \"\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":383,"generationNumber":57,"generationTime":76.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3675,"end":3675}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a7ff3bc09d5181dee000d8feb569c73f"},"selectionCount":0,"operation":{"parentIds":[294],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3675,"end":3675}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3672,15 +3672,12 @@\n         int increase \u003d 0;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n-        for (int i \u003d 0; i \u003c searchList.length; i++) {\n+        for (int i \u003d 0;; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":384,"generationNumber":57,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[294,342],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":385,"generationNumber":57,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"3573367e7cff0561b475d43c56210e74"},"selectionCount":6,"operation":{"parentIds":[342,335],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":386,"generationNumber":58,"generationTime":73.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return \"\";\n","lineNumberRange":{"start":3670,"end":3670}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4bcc2aa5859530e5472ee524a717365e"},"selectionCount":0,"operation":{"parentIds":[335],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return \"\";\n","lineNumberRange":{"start":3670,"end":3670}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -486,7 +486,7 @@\n         if (str \u003d\u003d null || (strLen \u003d str.length()) \u003d\u003d 0) {\n             return str;\n         }\n-        int start \u003d 0;\n+        return \"\";\n         if (stripChars \u003d\u003d null) {\n             while ((start !\u003d strLen) \u0026\u0026 Character.isWhitespace(str.charAt(start))) {\n                 start++;\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3724,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":387,"generationNumber":58,"generationTime":365.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3692,"end":3692}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e43de5f5e4e03a50f1e87f91e4d258cf"},"selectionCount":0,"operation":{"parentIds":[335],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3692,"end":3692}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3688,13 +3689,10 @@\n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n             }\n-            buf.append(replacementList[replaceIndex]);\n-\n             start \u003d textIndex + searchList[replaceIndex].length();\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3722,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":388,"generationNumber":58,"generationTime":114.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"pads \u003c\u003d 0","lineNumberRange":{"start":3646,"end":3647}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"ee4269597f9b296f03d59d9c2be7f96c"},"selectionCount":0,"operation":{"parentIds":[318],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"pads \u003c\u003d 0","lineNumberRange":{"start":3646,"end":3647}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,14 +3636,14 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n         for (int i \u003d 0; i \u003c searchLength; i++) {\n-            if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n-                searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n+            if (pads \u003c\u003d 0) \n             {\n                 continue;\n             }\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":389,"generationNumber":58,"generationTime":41.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3656,"end":3656}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3656,"end":3656}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":390,"generationNumber":58,"generationTime":199.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3713,"end":3713}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4b55a5187b1c846d8a31ea3ebcdb83b0"},"selectionCount":0,"operation":{"parentIds":[385],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3713,"end":3713}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,11 +3707,11 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n+                        return null;\n+\t\t\t\t\t\treplaceIndex \u003d i;\n                     }\n                 }\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":391,"generationNumber":58,"generationTime":42.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"aafd93cd648f06a4a311f359a9a6a837"},"selectionCount":2,"operation":{"parentIds":[214,335],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":392,"generationNumber":58,"generationTime":14.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3694,"end":3694}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[385,342],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":393,"generationNumber":59,"generationTime":61.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[335],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3666,"end":3666}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":394,"generationNumber":59,"generationTime":196.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e924d49a13d414a70b6a91c78b043cd2"},"selectionCount":0,"operation":{"parentIds":[391],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,9 +3631,6 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n-        boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n-\n         // index on index that the match was found\n         int textIndex \u003d -1;\n         int replaceIndex \u003d -1;\n@@ -3678,8 +3675,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3690,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3702,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":395,"generationNumber":59,"generationTime":97.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array.getClass().getComponentType().isInstance(objectToFind)","lineNumberRange":{"start":3708,"end":3708}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"82493dbeeb8de38ba9de3133c68bd1fe"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array.getClass().getComponentType().isInstance(objectToFind)","lineNumberRange":{"start":3708,"end":3708}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3706,8 +3705,7 @@\n                 tempIndex \u003d text.indexOf(searchList[i], start);\n \n                 // see if we need to keep searching for this\n-                if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n+                if (array.getClass().getComponentType().isInstance(objectToFind)) {\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":396,"generationNumber":59,"generationTime":42.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"index !\u003d 0","lineNumberRange":{"start":3665,"end":3665}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[391],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"index !\u003d 0","lineNumberRange":{"start":3665,"end":3665}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":397,"generationNumber":59,"generationTime":112.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return -1;\n","lineNumberRange":{"start":3635,"end":3635}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1fddfd4647a6fe11761411a044870fc3"},"selectionCount":0,"operation":{"parentIds":[391],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return -1;\n","lineNumberRange":{"start":3635,"end":3635}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3631,7 +3631,8 @@\n                 + replacementLength);\n         }\n \n-        // keep track of which still have matches\n+        return -1;\n+\t\t// keep track of which still have matches\n         boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n \n         // index on index that the match was found\n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3694,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":398,"generationNumber":59,"generationTime":42.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[385,391],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":399,"generationNumber":59,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,318],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":400,"generationNumber":60,"generationTime":123.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"52f63fcde4223258f6c713620135d1b7"},"selectionCount":0,"operation":{"parentIds":[391],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,6 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**\n@@ -3678,8 +3677,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":401,"generationNumber":60,"generationTime":114.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"result[i]\u003darray[i].shortValue();\n","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4a5a5e7bf8938523d378d09ef1e4accc"},"selectionCount":0,"operation":{"parentIds":[385],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"result[i]\u003darray[i].shortValue();\n","lineNumberRange":{"start":3726,"end":3726}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3725,6 +3724,7 @@\n         String result \u003d buf.toString();\n         if (!repeat) {\n             return result;\n+\t\t\tresult[i] \u003d array[i].shortValue();\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":402,"generationNumber":60,"generationTime":132.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end \u003e str.length()","lineNumberRange":{"start":3678,"end":3678}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"875c0c9bb19d932f39f2d3e51cdb333e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end \u003e str.length()","lineNumberRange":{"start":3678,"end":3678}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3674,13 +3675,10 @@\n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n-            if (greater \u003e 0) {\n+            if (end \u003e str.length()) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":403,"generationNumber":60,"generationTime":44.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"j \u003c searchChars.length","lineNumberRange":{"start":3686,"end":3686}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"j \u003c searchChars.length","lineNumberRange":{"start":3686,"end":3686}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":404,"generationNumber":60,"generationTime":282.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return candidateMethod;\n","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2fc8944cea93125129ade4d26eace15d"},"selectionCount":0,"operation":{"parentIds":[335],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return candidateMethod;\n","lineNumberRange":{"start":3694,"end":3694}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3690,11 +3691,10 @@\n             }\n             buf.append(replacementList[replaceIndex]);\n \n-            start \u003d textIndex + searchList[replaceIndex].length();\n+            return candidateMethod;\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3724,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":405,"generationNumber":60,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[385,318],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":406,"generationNumber":60,"generationTime":37.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5616b26be6d7aae8756830098130d61c"},"selectionCount":4,"operation":{"parentIds":[214,335],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":407,"generationNumber":61,"generationTime":105.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"langs\u003dCollections.emptyList();\n","lineNumberRange":{"start":3712,"end":3712}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f88546e173f737cd55363c8b07329dab"},"selectionCount":0,"operation":{"parentIds":[385],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"langs\u003dCollections.emptyList();\n","lineNumberRange":{"start":3712,"end":3712}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,10 +3707,10 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n+                        langs \u003d Collections.emptyList();\n+\t\t\t\t\t\ttextIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":408,"generationNumber":61,"generationTime":198.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  if (separatorChars.indexOf(str.charAt(i)) \u003e\u003d 0) {\n    if (match || preserveAllTokens) {\n      lastMatch\u003dtrue;\n      if (sizePlus1++ \u003d\u003d max) {\n        i\u003dlen;\n        lastMatch\u003dfalse;\n      }\n      list.add(str.substring(start,i));\n      match\u003dfalse;\n    }\n    start\u003d++i;\n    continue;\n  }\n  lastMatch\u003dfalse;\n  match\u003dtrue;\n  i++;\n}\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5f6b4a17f2c4f372c4128a3d9513f66a"},"selectionCount":0,"operation":{"parentIds":[406],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  if (separatorChars.indexOf(str.charAt(i)) \u003e\u003d 0) {\n    if (match || preserveAllTokens) {\n      lastMatch\u003dtrue;\n      if (sizePlus1++ \u003d\u003d max) {\n        i\u003dlen;\n        lastMatch\u003dfalse;\n      }\n      list.add(str.substring(start,i));\n      match\u003dfalse;\n    }\n    start\u003d++i;\n    continue;\n  }\n  lastMatch\u003dfalse;\n  match\u003dtrue;\n  i++;\n}\n","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,25 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\t{\n+\t\t\tif (separatorChars.indexOf(str.charAt(i)) \u003e\u003d 0) {\n+\t\t\t\tif (match || preserveAllTokens) {\n+\t\t\t\t\tlastMatch \u003d true;\n+\t\t\t\t\tif (sizePlus1++ \u003d\u003d max) {\n+\t\t\t\t\t\ti \u003d len;\n+\t\t\t\t\t\tlastMatch \u003d false;\n+\t\t\t\t\t}\n+\t\t\t\t\tlist.add(str.substring(start, i));\n+\t\t\t\t\tmatch \u003d false;\n+\t\t\t\t}\n+\t\t\t\tstart \u003d ++i;\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\tlastMatch \u003d false;\n+\t\t\tmatch \u003d true;\n+\t\t\ti++;\n+\t\t}\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3713,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":409,"generationNumber":61,"generationTime":37.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return toIntValue(ch.charValue(),defaultValue);\n","lineNumberRange":{"start":3645,"end":3662}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[385],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return toIntValue(ch.charValue(),defaultValue);\n","lineNumberRange":{"start":3645,"end":3662}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":410,"generationNumber":61,"generationTime":20.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Byte b\u003darray[i];\n","lineNumberRange":{"start":3685,"end":3718}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Byte b\u003darray[i];\n","lineNumberRange":{"start":3685,"end":3718}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":411,"generationNumber":61,"generationTime":74.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c str.length()","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8676893a9e2a834930efce43def6956e"},"selectionCount":0,"operation":{"parentIds":[385],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c str.length()","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3653,7 +3654,7 @@\n             if (tempIndex \u003d\u003d -1) {\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n-                if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n+                if (i \u003c str.length()) {\n                     textIndex \u003d tempIndex;\n                     replaceIndex \u003d i;\n                 }\n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":412,"generationNumber":61,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1b0ebc5f9574bcb724dffbe7543a77b3"},"selectionCount":0,"operation":{"parentIds":[385,335],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3724,7 +3724,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":413,"generationNumber":61,"generationTime":20.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[406,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":414,"generationNumber":62,"generationTime":30.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3681}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[406],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3681}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":415,"generationNumber":62,"generationTime":73.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return i;\n","lineNumberRange":{"start":3697,"end":3697}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5ec94b008f4f2bc96def3dd85f516cf4"},"selectionCount":0,"operation":{"parentIds":[406],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return i;\n","lineNumberRange":{"start":3697,"end":3697}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3695,7 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n+\t\t\treturn i;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":416,"generationNumber":62,"generationTime":79.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d89dd5f7048ede7d5103a68de1a95457"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3672,15 +3673,12 @@\n         int increase \u003d 0;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n-        for (int i \u003d 0; i \u003c searchList.length; i++) {\n+        for (int i \u003d 0;; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":417,"generationNumber":62,"generationTime":77.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"fc7dd0cfa4bd97c42a3d0e26b7790ba0"},"selectionCount":0,"operation":{"parentIds":[385],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,8 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\treturn str;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3694,7 +3696,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":418,"generationNumber":62,"generationTime":65.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"(start !\u003d strLen) \u0026\u0026 (stripChars.indexOf(str.charAt(start)) !\u003d -1)","lineNumberRange":{"start":3687,"end":3687}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"4236c072fa2e652e3ac303a13dee43cd"},"selectionCount":0,"operation":{"parentIds":[406],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"(start !\u003d strLen) \u0026\u0026 (stripChars.indexOf(str.charAt(start)) !\u003d -1)","lineNumberRange":{"start":3687,"end":3687}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3683,7 +3684,7 @@\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n-        while (textIndex !\u003d -1) {\n+        while ((start !\u003d strLen) \u0026\u0026 (stripChars.indexOf(str.charAt(start)) !\u003d -1)) {\n \n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n@@ -3694,7 +3695,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":419,"generationNumber":62,"generationTime":10.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318,406],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":420,"generationNumber":62,"generationTime":29.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318,335],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":421,"generationNumber":63,"generationTime":65.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"buf.append(array[i]);\n","lineNumberRange":{"start":3651,"end":3651}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1eee2d2a7ada5d99c60f4b805e48428c"},"selectionCount":0,"operation":{"parentIds":[406],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"buf.append(array[i]);\n","lineNumberRange":{"start":3651,"end":3651}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3647,7 +3648,8 @@\n             {\n                 continue;\n             }\n-            tempIndex \u003d text.indexOf(searchList[i]);\n+            buf.append(array[i]);\n+\t\t\ttempIndex \u003d text.indexOf(searchList[i]);\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n@@ -3694,7 +3696,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":422,"generationNumber":63,"generationTime":61.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return array.clone();\n","lineNumberRange":{"start":3705,"end":3705}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a848a893256efbc191a261f3b2a05981"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return array.clone();\n","lineNumberRange":{"start":3705,"end":3705}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3704,10 +3703,10 @@\n                     continue;\n                 }\n                 tempIndex \u003d text.indexOf(searchList[i], start);\n+\t\t\t\treturn array.clone();\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":423,"generationNumber":63,"generationTime":274.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"fad57ccc47ea1021d6287a99accb970e"},"selectionCount":9,"operation":{"parentIds":[385],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":424,"generationNumber":63,"generationTime":280.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3659,"end":3659}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2d8f7f250b07addd99652516a2910392"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3659,"end":3659}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3655,7 +3656,6 @@\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                     textIndex \u003d tempIndex;\n-                    replaceIndex \u003d i;\n                 }\n             }\n         }\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":425,"generationNumber":63,"generationTime":30.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3678,"end":3678}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[406],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3678,"end":3678}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":426,"generationNumber":63,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[335,385],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":427,"generationNumber":63,"generationTime":29.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,335],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":428,"generationNumber":64,"generationTime":145.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"cAvailableLocaleList\u003dCollections.unmodifiableList(list);\n","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"425fe12cc2c97869b6b8feab035aa1a3"},"selectionCount":0,"operation":{"parentIds":[423],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"cAvailableLocaleList\u003dCollections.unmodifiableList(list);\n","lineNumberRange":{"start":3694,"end":3694}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,7 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n+\t\t\tcAvailableLocaleList \u003d Collections.unmodifiableList(list);\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":429,"generationNumber":64,"generationTime":28.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[406],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":430,"generationNumber":64,"generationTime":269.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3726,"end":3726}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"044d8236af640d559658628aabe748ea"},"selectionCount":0,"operation":{"parentIds":[335],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,7 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n-        int replaceIndex \u003d -1;\n+\t\tint replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3694,7 +3694,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3723,6 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":431,"generationNumber":64,"generationTime":66.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"bb210691d3864182a43fff57dc159646"},"selectionCount":0,"operation":{"parentIds":[406],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3694,"end":3694}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3690,11 +3691,10 @@\n             }\n             buf.append(replacementList[replaceIndex]);\n \n-            start \u003d textIndex + searchList[replaceIndex].length();\n+            return null;\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":432,"generationNumber":64,"generationTime":84.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return text;\n","lineNumberRange":{"start":3651,"end":3651}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e2f2945323184a66c40657ec8bf93b59"},"selectionCount":0,"operation":{"parentIds":[423],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return text;\n","lineNumberRange":{"start":3651,"end":3651}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3648,6 +3649,7 @@\n                 continue;\n             }\n             tempIndex \u003d text.indexOf(searchList[i]);\n+\t\t\treturn text;\n \n             // see if we need to keep searching for this\n             if (tempIndex \u003d\u003d -1) {\n@@ -3678,9 +3680,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":433,"generationNumber":64,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[406,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":434,"generationNumber":64,"generationTime":33.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"09a2c1d8872af6392c5f86656add00ab"},"selectionCount":16,"operation":{"parentIds":[423,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":435,"generationNumber":65,"generationTime":74.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3673,"end":3673}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"de51dfae006a2cd82ac2fed98a91272e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3673,"end":3673}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3668,9 +3669,6 @@\n \n         int start \u003d 0;\n \n-        // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n-        int increase \u003d 0;\n-\n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n@@ -3678,9 +3676,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3689,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":436,"generationNumber":65,"generationTime":140.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1dd9f81f532d9548ca96cbfdbef2b43b"},"selectionCount":0,"operation":{"parentIds":[434],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,7 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n+        return false;\n     }\n \n     /**\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":437,"generationNumber":65,"generationTime":71.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"j \u003c searchChars.length","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5c6ddf5b92150eac10697d1b1ba68cbc"},"selectionCount":0,"operation":{"parentIds":[318],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"j \u003c searchChars.length","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3672,15 +3673,12 @@\n         int increase \u003d 0;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n-        for (int i \u003d 0; i \u003c searchList.length; i++) {\n+        for (int i \u003d 0; j \u003c searchChars.length; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":438,"generationNumber":65,"generationTime":137.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"bf4962d74a9523d5e1a5e07d67a04c46"},"selectionCount":0,"operation":{"parentIds":[318],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return result;\n","lineNumberRange":{"start":3682,"end":3682}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3446,7 +3446,8 @@\n         int increase \u003d replacement.length() - replLength;\n         increase \u003d (increase \u003c 0 ? 0 : increase);\n         increase *\u003d (max \u003c 0 ? 16 : (max \u003e 64 ? 64 : max));\n-        StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n+        return result;\n+\t\tStringBuilder buf \u003d new StringBuilder(text.length() + increase);\n         while (end !\u003d -1) {\n             buf.append(text.substring(start, end)).append(replacement);\n             start \u003d end + replLength;\n@@ -3636,6 +3637,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3680,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":439,"generationNumber":65,"generationTime":37.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3691,"end":3691}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3691,"end":3691}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":440,"generationNumber":65,"generationTime":18.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,423],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":441,"generationNumber":65,"generationTime":19.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423,434],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":442,"generationNumber":66,"generationTime":86.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"535f0f882b233bb3c8a704ef58549584"},"selectionCount":0,"operation":{"parentIds":[423],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return false;\n","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,11 +3704,11 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n-                        replaceIndex \u003d i;\n+                        return false;\n+\t\t\t\t\t\treplaceIndex \u003d i;\n                     }\n                 }\n             }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":443,"generationNumber":66,"generationTime":120.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3721,"end":3721}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5011133fbfaaa5abeb2cb2a89ebf21de"},"selectionCount":0,"operation":{"parentIds":[423],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3721,"end":3721}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3722,7 +3718,7 @@\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }\n-        String result \u003d buf.toString();\n+        return null;\n         if (!repeat) {\n             return result;\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":444,"generationNumber":66,"generationTime":108.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3673,"end":3673}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1e7dddef75b21d5026dd73947d88350a"},"selectionCount":0,"operation":{"parentIds":[434],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3673,"end":3673}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3668,9 +3669,6 @@\n \n         int start \u003d 0;\n \n-        // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n-        int increase \u003d 0;\n-\n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n@@ -3678,8 +3676,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":445,"generationNumber":66,"generationTime":135.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"!iterator.hasNext()","lineNumberRange":{"start":3676,"end":3676}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b3d34fb7137c7c53e70f9bc74908df01"},"selectionCount":0,"operation":{"parentIds":[423],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"!iterator.hasNext()","lineNumberRange":{"start":3676,"end":3676}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3672,15 +3673,12 @@\n         int increase \u003d 0;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n-        for (int i \u003d 0; i \u003c searchList.length; i++) {\n+        for (int i \u003d 0; !iterator.hasNext(); i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":446,"generationNumber":66,"generationTime":73.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int gap\u003dend - start;\n","lineNumberRange":{"start":3708,"end":3711}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int gap\u003dend - start;\n","lineNumberRange":{"start":3708,"end":3711}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":447,"generationNumber":66,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423,214],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":448,"generationNumber":66,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"7d193374af97a1344ad84c8da8e0ee0a"},"selectionCount":14,"operation":{"parentIds":[214,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":449,"generationNumber":67,"generationTime":394.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3658,"end":3658}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"8ac6e3a228ac1d86cc3f9c95b90d536b"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3658,"end":3658}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3654,7 +3655,6 @@\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":450,"generationNumber":67,"generationTime":112.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"40ea070fe6aa589be5738a8f57129b78"},"selectionCount":0,"operation":{"parentIds":[214],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,6 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**\n@@ -3678,8 +3677,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":451,"generationNumber":67,"generationTime":90.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"(Character.isWhitespace(str.charAt(i)) \u003d\u003d false)","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1c56ab42560182fa322946786656e705"},"selectionCount":0,"operation":{"parentIds":[214],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"(Character.isWhitespace(str.charAt(i)) \u003d\u003d false)","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,9 +3706,8 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n-                    if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n+                    if ((Character.isWhitespace(str.charAt(i)) \u003d\u003d false)) {\n                         textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":452,"generationNumber":67,"generationTime":105.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"className\u003dclassName.substring(1);\n","lineNumberRange":{"start":3624,"end":3624}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"407e980d09360a23d6a63952d35dfcc5"},"selectionCount":0,"operation":{"parentIds":[434],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"className\u003dclassName.substring(1);\n","lineNumberRange":{"start":3624,"end":3624}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3621,7 +3621,7 @@\n         }\n \n         int searchLength \u003d searchList.length;\n-        int replacementLength \u003d replacementList.length;\n+        className \u003d className.substring(1);\n \n         // make sure lengths are ok, these need to be equal\n         if (searchLength !\u003d replacementLength) {\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":453,"generationNumber":67,"generationTime":108.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3641,"end":3641}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"a8a795498d0960d7182cebedc4bf2b3b"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3641,"end":3641}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,9 +3636,8 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n-        int tempIndex \u003d -1;\n-\n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n         for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3678,9 +3677,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3690,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":454,"generationNumber":67,"generationTime":48.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9c3dfccb8a7ae6f91d30ab12b97d1144"},"selectionCount":0,"operation":{"parentIds":[434,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3694,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":455,"generationNumber":67,"generationTime":29.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448,214],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":456,"generationNumber":68,"generationTime":73.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3641,"end":3641}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3641,"end":3641}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":457,"generationNumber":68,"generationTime":115.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return getPackageCanonicalName(object.getClass().getName());\n","lineNumberRange":{"start":3696,"end":3696}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"fbe93af7e6cf9b6814f8bdec8e924a84"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return getPackageCanonicalName(object.getClass().getName());\n","lineNumberRange":{"start":3696,"end":3696}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3693,7 +3693,8 @@\n             start \u003d textIndex + searchList[replaceIndex].length();\n \n             textIndex \u003d -1;\n-            replaceIndex \u003d -1;\n+            return getPackageCanonicalName(object.getClass().getName());\n+\t\t\treplaceIndex \u003d -1;\n             tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":458,"generationNumber":68,"generationTime":208.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int i\u003d0;\n","lineNumberRange":{"start":3719,"end":3719}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"789e76a24db1347ad676ec4a7d66f57f"},"selectionCount":0,"operation":{"parentIds":[448],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int i\u003d0;\n","lineNumberRange":{"start":3719,"end":3719}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3719,6 +3717,7 @@\n \n         }\n         int textLength \u003d text.length();\n+\t\tint i \u003d 0;\n         for (int i \u003d start; i \u003c textLength; i++) {\n             buf.append(text.charAt(i));\n         }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":459,"generationNumber":68,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Class\u003c?\u003e clazz;\n","lineNumberRange":{"start":3656,"end":3659}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"Class\u003c?\u003e clazz;\n","lineNumberRange":{"start":3656,"end":3659}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":460,"generationNumber":68,"generationTime":427.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3667,"end":3667}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"55bbcd04a541fe7e4240b7182fd9c0a3"},"selectionCount":0,"operation":{"parentIds":[423],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3667,"end":3667}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9393939393939394,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":461,"generationNumber":68,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":462,"generationNumber":68,"generationTime":29.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448,434],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":463,"generationNumber":69,"generationTime":280.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3667,"end":3667}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"96c32fcbd8cf2b3f2d93623702f20085"},"selectionCount":0,"operation":{"parentIds":[434],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3667,"end":3667}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9393939393939394,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,6 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":464,"generationNumber":69,"generationTime":79.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1d331796d7f9b82b778cef68ac773a16"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3673,14 +3674,10 @@\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n-            int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":465,"generationNumber":69,"generationTime":46.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3645,"end":3662}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3645,"end":3662}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":466,"generationNumber":69,"generationTime":18.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3687,"end":3687}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array \u003d\u003d null","lineNumberRange":{"start":3687,"end":3687}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":467,"generationNumber":69,"generationTime":62.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  if (index !\u003d 0) {\n    throw new IndexOutOfBoundsException(\"Index: \" + index + \", Length: 0\");\n  }\n  Object joinedArray\u003dArray.newInstance(clss,1);\n  Array.set(joinedArray,0,element);\n  return joinedArray;\n}\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e471f03874bc0a912fc2867311ac3fd9"},"selectionCount":0,"operation":{"parentIds":[448],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  if (index !\u003d 0) {\n    throw new IndexOutOfBoundsException(\"Index: \" + index + \", Length: 0\");\n  }\n  Object joinedArray\u003dArray.newInstance(clss,1);\n  Array.set(joinedArray,0,element);\n  return joinedArray;\n}\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,15 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n+        {\n+\t\t\tif (index !\u003d 0) {\n+\t\t\t\tthrow new IndexOutOfBoundsException(\"Index: \" + index + \", Length: 0\");\n+\t\t\t}\n+\t\t\tObject joinedArray \u003d Array.newInstance(clss, 1);\n+\t\t\tArray.set(joinedArray, 0, element);\n+\t\t\treturn joinedArray;\n+\t\t}\n+\t\treturn replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**\n@@ -3678,8 +3686,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3701,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":468,"generationNumber":69,"generationTime":9.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[214,434],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":469,"generationNumber":69,"generationTime":28.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d34d74f125f9b63061157e93669a6ee9"},"selectionCount":5,"operation":{"parentIds":[423,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":470,"generationNumber":70,"generationTime":73.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2d4de5d819b56409f8b7ec4f60ed12fa"},"selectionCount":0,"operation":{"parentIds":[434],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str;\n","lineNumberRange":{"start":3695,"end":3695}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3692,7 +3692,7 @@\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n \n-            textIndex \u003d -1;\n+            return str;\n             replaceIndex \u003d -1;\n             tempIndex \u003d -1;\n             // find the next earliest match\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":471,"generationNumber":70,"generationTime":74.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"result.append(str.substring(0,index));\n","lineNumberRange":{"start":3712,"end":3712}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5b3fc5c16044e5f1f56aa22a654d0163"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"result.append(str.substring(0,index));\n","lineNumberRange":{"start":3712,"end":3712}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,10 +3707,10 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n+\t\t\t\t\t\tresult.append(str.substring(0, index));\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":472,"generationNumber":70,"generationTime":77.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"ClassLoader loader\u003dcontextCL \u003d\u003d null ? ClassUtils.class.getClassLoader() : contextCL;\n","lineNumberRange":{"start":3673,"end":3673}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f7cf7eb2d51446f087271a025e00f964"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"ClassLoader loader\u003dcontextCL \u003d\u003d null ? ClassUtils.class.getClassLoader() : contextCL;\n","lineNumberRange":{"start":3673,"end":3673}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3668,7 +3669,8 @@\n \n         int start \u003d 0;\n \n-        // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n+        ClassLoader loader \u003d contextCL \u003d\u003d null ? ClassUtils.class.getClassLoader() : contextCL;\n+\t\t// get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n         int increase \u003d 0;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n@@ -3678,8 +3680,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":473,"generationNumber":70,"generationTime":140.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"object instanceof Object[]","lineNumberRange":{"start":3646,"end":3647}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"ca3630164b7f85a4a00df5fb5758d9b2"},"selectionCount":0,"operation":{"parentIds":[469],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"object instanceof Object[]","lineNumberRange":{"start":3646,"end":3647}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,14 +3636,14 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n         for (int i \u003d 0; i \u003c searchLength; i++) {\n-            if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n-                searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n+            if (object instanceof Object[]) \n             {\n                 continue;\n             }\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":474,"generationNumber":70,"generationTime":84.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return true;\n","lineNumberRange":{"start":3723,"end":3723}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"01dcb44f8369e62c934ecd4cdc18dac8"},"selectionCount":0,"operation":{"parentIds":[423],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return true;\n","lineNumberRange":{"start":3723,"end":3723}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;\n@@ -3725,6 +3721,7 @@\n         String result \u003d buf.toString();\n         if (!repeat) {\n             return result;\n+\t\t\treturn true;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":475,"generationNumber":70,"generationTime":18.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434,469],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":476,"generationNumber":70,"generationTime":98.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423,318],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":477,"generationNumber":71,"generationTime":83.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"buf.append(separator);\n","lineNumberRange":{"start":3640,"end":3640}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"2a799b42c8a6eed4eba7b7b45169e045"},"selectionCount":0,"operation":{"parentIds":[434],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"buf.append(separator);\n","lineNumberRange":{"start":3640,"end":3640}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,7 +3636,8 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n-        int replaceIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n+        buf.append(separator);\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":478,"generationNumber":71,"generationTime":47.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3706,"end":3706}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3706,"end":3706}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":479,"generationNumber":71,"generationTime":92.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3640,"end":3640}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"37fa68c197dd6d4a702281daf75aa31f"},"selectionCount":0,"operation":{"parentIds":[423],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3640,"end":3640}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,7 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n-        int replaceIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int tempIndex \u003d -1;\n \n         // index of replace array that will replace the search string found\n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3691,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3703,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":480,"generationNumber":71,"generationTime":74.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return indexOfAny(str,searchChars.toCharArray());\n","lineNumberRange":{"start":3639,"end":3639}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"fa408eec56fb1a728e91da612182e7bb"},"selectionCount":0,"operation":{"parentIds":[318],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return indexOfAny(str,searchChars.toCharArray());\n","lineNumberRange":{"start":3639,"end":3639}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,8 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\treturn indexOfAny(str, searchChars.toCharArray());\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3680,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":481,"generationNumber":71,"generationTime":46.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":482,"generationNumber":71,"generationTime":27.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423,448],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":483,"generationNumber":71,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434,448],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":484,"generationNumber":72,"generationTime":63.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"list.contains(defaultLocale) \u003d\u003d false","lineNumberRange":{"start":3720,"end":3720}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1d797cba1bedd9b6208f8337080c6b06"},"selectionCount":0,"operation":{"parentIds":[448],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"list.contains(defaultLocale) \u003d\u003d false","lineNumberRange":{"start":3720,"end":3720}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3719,7 +3717,7 @@\n \n         }\n         int textLength \u003d text.length();\n-        for (int i \u003d start; i \u003c textLength; i++) {\n+        for (int i \u003d start; list.contains(defaultLocale) \u003d\u003d false; i++) {\n             buf.append(text.charAt(i));\n         }\n         String result \u003d buf.toString();"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":485,"generationNumber":72,"generationTime":285.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"5c91104faf4b63464d14293b0f49f54a"},"selectionCount":8,"operation":{"parentIds":[469],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3704,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":486,"generationNumber":72,"generationTime":20.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end \u003c len","lineNumberRange":{"start":3699,"end":3700}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"end \u003c len","lineNumberRange":{"start":3699,"end":3700}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":487,"generationNumber":72,"generationTime":275.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c searchLength","lineNumberRange":{"start":3686,"end":3686}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"7a91b4518d5baeee8251c691c8ef7b99"},"selectionCount":0,"operation":{"parentIds":[318],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c searchLength","lineNumberRange":{"start":3686,"end":3686}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,14 +3679,11 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n \n-            for (int i \u003d start; i \u003c textIndex; i++) {\n+            for (int i \u003d start; i \u003c searchLength; i++) {\n                 buf.append(text.charAt(i));\n             }\n             buf.append(replacementList[replaceIndex]);\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":488,"generationNumber":72,"generationTime":63.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"at \u003d\u003d -1","lineNumberRange":{"start":3698,"end":3698}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"0d94dc9769a5d9c026ed55d6aa5f208f"},"selectionCount":0,"operation":{"parentIds":[448],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"at \u003d\u003d -1","lineNumberRange":{"start":3698,"end":3698}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,10 +3693,9 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n-            for (int i \u003d 0; i \u003c searchLength; i++) {\n+            for (int i \u003d 0; at \u003d\u003d -1; i++) {\n                 if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n                     searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n                 {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":489,"generationNumber":72,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[423,469],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":490,"generationNumber":72,"generationTime":18.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448,318],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":491,"generationNumber":73,"generationTime":74.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"stripChars.length() \u003d\u003d 0","lineNumberRange":{"start":3678,"end":3678}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"3df0e713e78a9575fa408391af344fd0"},"selectionCount":0,"operation":{"parentIds":[469],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"stripChars.length() \u003d\u003d 0","lineNumberRange":{"start":3678,"end":3678}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3674,13 +3675,10 @@\n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n-            if (greater \u003e 0) {\n+            if (stripChars.length() \u003d\u003d 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":492,"generationNumber":73,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3685,"end":3685}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3685,"end":3685}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":493,"generationNumber":73,"generationTime":72.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return -1;\n","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"84f4939719dda9cb1b023b136f81fe61"},"selectionCount":0,"operation":{"parentIds":[469],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return -1;\n","lineNumberRange":{"start":3710,"end":3710}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,10 +3705,10 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n+                        return -1;\n+\t\t\t\t\t\ttextIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":494,"generationNumber":73,"generationTime":145.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return ObjectUtils.toString(first);\n","lineNumberRange":{"start":3688,"end":3688}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"29f24001577b053f2945eb0891038f44"},"selectionCount":0,"operation":{"parentIds":[485],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return ObjectUtils.toString(first);\n","lineNumberRange":{"start":3688,"end":3688}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3688,7 +3685,8 @@\n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n             }\n-            buf.append(replacementList[replaceIndex]);\n+            return ObjectUtils.toString(first);\n+\t\t\tbuf.append(replacementList[replaceIndex]);\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n \n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":495,"generationNumber":73,"generationTime":33.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3713}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3713}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":496,"generationNumber":73,"generationTime":30.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434,485],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":497,"generationNumber":73,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318,485],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":498,"generationNumber":74,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3724,"end":3724}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3724,"end":3724}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":499,"generationNumber":74,"generationTime":37.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3699,"end":3700}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[469],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3699,"end":3700}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":500,"generationNumber":74,"generationTime":393.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char tmp\u003d0;\n","lineNumberRange":{"start":3686,"end":3686}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"84287463b9046d0edb86c535e83b0ff7"},"selectionCount":0,"operation":{"parentIds":[485],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char tmp\u003d0;\n","lineNumberRange":{"start":3686,"end":3686}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,15 +3678,13 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n \n             for (int i \u003d start; i \u003c textIndex; i++) {\n-                buf.append(text.charAt(i));\n+                char tmp \u003d 0;\n+\t\t\t\tbuf.append(text.charAt(i));\n             }\n             buf.append(replacementList[replaceIndex]);\n \n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":501,"generationNumber":74,"generationTime":375.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3648,"end":3648}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"78d94c5875aa7d5a1f51464ee310e18b"},"selectionCount":3,"operation":{"parentIds":[448],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3648,"end":3648}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3678,8 +3677,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":502,"generationNumber":74,"generationTime":400.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"332a04ac5d32222c304089726318bcb2"},"selectionCount":0,"operation":{"parentIds":[434],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":503,"generationNumber":74,"generationTime":43.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434,469],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":504,"generationNumber":74,"generationTime":41.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318,469],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":505,"generationNumber":75,"generationTime":132.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"364905e901aead17d927569a7dc6a851"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3638,"end":3638}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3634,8 +3634,7 @@\n         // keep track of which still have matches\n         boolean[] noMoreMatchesForReplIndex \u003d new boolean[searchLength];\n \n-        // index on index that the match was found\n-        int textIndex \u003d -1;\n+        char ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3677,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3690,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":506,"generationNumber":75,"generationTime":417.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"02cda003379a4bfcbe0e5c592e1e7f04"},"selectionCount":0,"operation":{"parentIds":[485],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3709,"end":3709}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9696969696969697,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,10 +3704,8 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                        textIndex \u003d tempIndex;\n                         replaceIndex \u003d i;\n                     }\n                 }"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":507,"generationNumber":75,"generationTime":58.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3657,"end":3657}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3657,"end":3657}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":508,"generationNumber":75,"generationTime":120.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int tmp;\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"3aea39cda2fe811d291f2c549625127c"},"selectionCount":0,"operation":{"parentIds":[318],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int tmp;\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,7 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n+        int tmp;\n     }\n \n     /**\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3679,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3694,7 +3692,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":509,"generationNumber":75,"generationTime":115.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"final Short[] result\u003dnew Short[array.length];\n","lineNumberRange":{"start":3691,"end":3691}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b65e9cb131cfa10d84c467c4fdd2345a"},"selectionCount":0,"operation":{"parentIds":[434],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"final Short[] result\u003dnew Short[array.length];\n","lineNumberRange":{"start":3691,"end":3691}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3688,7 +3688,7 @@\n             for (int i \u003d start; i \u003c textIndex; i++) {\n                 buf.append(text.charAt(i));\n             }\n-            buf.append(replacementList[replaceIndex]);\n+            final Short[] result \u003d new Short[array.length];\n \n             start \u003d textIndex + searchList[replaceIndex].length();\n \n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":510,"generationNumber":75,"generationTime":29.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448,485],"name":"random-crossover"},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":511,"generationNumber":75,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":512,"generationNumber":76,"generationTime":51.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c textIndex","lineNumberRange":{"start":3646,"end":3647}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"i \u003c textIndex","lineNumberRange":{"start":3646,"end":3647}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":513,"generationNumber":76,"generationTime":290.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  buf[count++]\u003dch;\n  lastWasGap\u003dfalse;\n}\n","lineNumberRange":{"start":3501,"end":3501}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"ca3922bb165574e7bf7fcfbe389fb014"},"selectionCount":0,"operation":{"parentIds":[485],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"{\n  buf[count++]\u003dch;\n  lastWasGap\u003dfalse;\n}\n","lineNumberRange":{"start":3501,"end":3501}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3499,7 +3498,10 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n+        {\n+\t\t\tbuf[count++] \u003d ch;\n+\t\t\tlastWasGap \u003d false;\n+\t\t}\n     }\n \n     /**\n@@ -3636,6 +3638,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3681,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3707,7 +3707,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":514,"generationNumber":76,"generationTime":44.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex \u003c 0","lineNumberRange":{"start":3619,"end":3619}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndex \u003c 0","lineNumberRange":{"start":3619,"end":3619}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":515,"generationNumber":76,"generationTime":95.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str.substring(start + open.length(),end);\n","lineNumberRange":{"start":3725,"end":3725}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"d81d9eb638feb77c99a9da302077c20d"},"selectionCount":0,"operation":{"parentIds":[448],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return str.substring(start + open.length(),end);\n","lineNumberRange":{"start":3725,"end":3725}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3724,7 +3722,8 @@\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {\n-            return result;\n+            return str.substring(start + open.length(), end);\n+\t\t\treturn result;\n         }\n \n         return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":516,"generationNumber":76,"generationTime":155.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3648,"end":3648}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[501],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3655,"end":3655}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":517,"generationNumber":76,"generationTime":48.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[318,501],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":518,"generationNumber":76,"generationTime":43.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"6619235a6f0401534f11aae618de63f8"},"selectionCount":0,"operation":{"parentIds":[318,485],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3636,6 +3635,8 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n "}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":519,"generationNumber":77,"generationTime":102.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"cls \u003d\u003d null","lineNumberRange":{"start":3707,"end":3707}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"256184bfa75a75dd4236f716cd8e92d8"},"selectionCount":0,"operation":{"parentIds":[448],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"cls \u003d\u003d null","lineNumberRange":{"start":3707,"end":3707}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3706,7 +3704,7 @@\n                 tempIndex \u003d text.indexOf(searchList[i], start);\n \n                 // see if we need to keep searching for this\n-                if (tempIndex \u003d\u003d -1) {\n+                if (cls \u003d\u003d null) {\n                     noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":520,"generationNumber":77,"generationTime":297.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int increase\u003d0;\n","lineNumberRange":{"start":3615,"end":3615}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"e4b68329e925e2e304865aff7da717f9"},"selectionCount":3,"operation":{"parentIds":[448],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int increase\u003d0;\n","lineNumberRange":{"start":3615,"end":3615}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":0.9848484848484849,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,8 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n+            int increase \u003d 0;\n+\t\t\treturn text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3694,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":521,"generationNumber":77,"generationTime":37.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndexInclusive \u003c 0","lineNumberRange":{"start":3666,"end":3666}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"startIndexInclusive \u003c 0","lineNumberRange":{"start":3666,"end":3666}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":522,"generationNumber":77,"generationTime":79.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"cdbc35b6dc36c8ee588bb3486781b095"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3500,6 +3500,7 @@\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n         return replaceEach(text, searchList, replacementList, false, 0);\n+\t\treturn null;\n     }\n \n     /**\n@@ -3636,6 +3637,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3680,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":523,"generationNumber":77,"generationTime":80.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3658,"end":3658}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"1f1b4b22b1c0d66c5def82d711c0a789"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_before","appendBase":{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return null;\n","lineNumberRange":{"start":3658,"end":3658}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3636,6 +3636,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3654,7 +3655,8 @@\n                 noMoreMatchesForReplIndex[i] \u003d true;\n             } else {\n                 if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n-                    textIndex \u003d tempIndex;\n+                    return null;\n+\t\t\t\t\ttextIndex \u003d tempIndex;\n                     replaceIndex \u003d i;\n                 }\n             }\n@@ -3678,8 +3680,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3708,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":524,"generationNumber":77,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434,501],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":525,"generationNumber":77,"generationTime":29.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434,318],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":526,"generationNumber":78,"generationTime":46.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[485],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3677,"end":3677}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":527,"generationNumber":78,"generationTime":134.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int increase\u003d0;\n","lineNumberRange":{"start":3615,"end":3615}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"cAvailableLocaleSet \u003d\u003d null","lineNumberRange":{"start":3646,"end":3647}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"26d6c75e4fe5351eb9608c0f83d1616d"},"selectionCount":0,"operation":{"parentIds":[520],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"cAvailableLocaleSet \u003d\u003d null","lineNumberRange":{"start":3646,"end":3647}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,8 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n+            int increase \u003d 0;\n+\t\t\treturn text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3642,8 +3643,7 @@\n         // index of replace array that will replace the search string found\n         // NOTE: logic duplicated below START\n         for (int i \u003d 0; i \u003c searchLength; i++) {\n-            if (noMoreMatchesForReplIndex[i] || searchList[i] \u003d\u003d null || \n-                searchList[i].length() \u003d\u003d 0 || replacementList[i] \u003d\u003d null) \n+            if (cAvailableLocaleSet \u003d\u003d null) \n             {\n                 continue;\n             }\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":528,"generationNumber":78,"generationTime":29.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array[i] \u003d\u003d null","lineNumberRange":{"start":3627,"end":3627}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"array[i] \u003d\u003d null","lineNumberRange":{"start":3627,"end":3627}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":529,"generationNumber":78,"generationTime":79.0,"bases":[{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3649,"end":3649}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return new String(buffer);\n","lineNumberRange":{"start":3694,"end":3694}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"9b950d1b80d5458f5c5114d3a9f99adb"},"selectionCount":0,"operation":{"parentIds":[485],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return new String(buffer);\n","lineNumberRange":{"start":3694,"end":3694}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -1511,7 +1511,6 @@\n         for (int i \u003d 0; i \u003c sz; i++) {\n             String search \u003d searchStrs[i];\n             if (search \u003d\u003d null) {\n-                continue;\n             }\n             tmp \u003d str.indexOf(search);\n             if (tmp \u003d\u003d -1) {\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,9 +3678,6 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n-\n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n         while (textIndex !\u003d -1) {\n@@ -3695,6 +3692,7 @@\n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n             tempIndex \u003d -1;\n+\t\t\treturn new String(buffer);\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3707,7 +3705,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":530,"generationNumber":78,"generationTime":62.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return \"...\" + str.substring(str.length() - (maxWidth - 3));\n","lineNumberRange":{"start":3672,"end":3672}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"72fa2ab1b91bf1d6e9719b76c7f8f6d7"},"selectionCount":0,"operation":{"parentIds":[448],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return \"...\" + str.substring(str.length() - (maxWidth - 3));\n","lineNumberRange":{"start":3672,"end":3672}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3670,6 +3670,7 @@\n \n         // get a good guess on the size of the result buffer so it doesnt have to double if it goes over a bit\n         int increase \u003d 0;\n+\t\treturn \"...\" + str.substring(str.length() - (maxWidth - 3));\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i \u003d 0; i \u003c searchList.length; i++) {\n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3694,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":531,"generationNumber":78,"generationTime":28.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434,485],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":532,"generationNumber":78,"generationTime":28.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[485,434],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":533,"generationNumber":79,"generationTime":66.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return contains(range.getMinimum()) \u0026\u0026 contains(range.getMaximum());\n","lineNumberRange":{"start":3721,"end":3721}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"b1f91fbb1d15b40881e3bf2d848240eb"},"selectionCount":0,"operation":{"parentIds":[448],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return contains(range.getMinimum()) \u0026\u0026 contains(range.getMaximum());\n","lineNumberRange":{"start":3721,"end":3721}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {\n@@ -3720,7 +3718,7 @@\n         }\n         int textLength \u003d text.length();\n         for (int i \u003d start; i \u003c textLength; i++) {\n-            buf.append(text.charAt(i));\n+            return contains(range.getMinimum()) \u0026\u0026 contains(range.getMaximum());\n         }\n         String result \u003d buf.toString();\n         if (!repeat) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":534,"generationNumber":79,"generationTime":19.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0","lineNumberRange":{"start":3687,"end":3687}}],"generatedSourceCode":{"generationMessage":"class org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to class org.eclipse.jdt.core.dom.ChildListPropertyDescriptor (org.eclipse.jdt.core.dom.ChildPropertyDescriptor and org.eclipse.jdt.core.dom.ChildListPropertyDescriptor are in unnamed module of loader \u0027app\u0027)","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[448],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0","lineNumberRange":{"start":3687,"end":3687}}},"isSyntaxValid":false,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":535,"generationNumber":79,"generationTime":88.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int increase\u003d0;\n","lineNumberRange":{"start":3615,"end":3615}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3624,"end":3624}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"467f1b7d77c4f97bb6e3cbbada3cc765"},"selectionCount":0,"operation":{"parentIds":[520],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3624,"end":3624}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,8 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n+            int increase \u003d 0;\n+\t\t\treturn text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3620,7 +3621,6 @@\n             throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);\n         }\n \n-        int searchLength \u003d searchList.length;\n         int replacementLength \u003d replacementList.length;\n \n         // make sure lengths are ok, these need to be equal\n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":536,"generationNumber":79,"generationTime":110.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int increase\u003d0;\n","lineNumberRange":{"start":3615,"end":3615}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3616,"end":3616}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"19fb28a2e831387e8ec7b457f3279df2"},"selectionCount":0,"operation":{"parentIds":[520],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return INDEX_NOT_FOUND;\n","lineNumberRange":{"start":3616,"end":3616}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,8 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n+            int increase \u003d 0;\n+\t\t\treturn INDEX_NOT_FOUND;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3694,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":537,"generationNumber":79,"generationTime":123.0,"bases":[{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"f6a51f7a93150a7fb48365e254394b3e"},"selectionCount":0,"operation":{"parentIds":[434],"name":"delete","appendBase":{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3502,"end":3502}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3499,7 +3499,6 @@\n      * @since 2.4\n      */\n     public static String replaceEach(String text, String[] searchList, String[] replacementList) {\n-        return replaceEach(text, searchList, replacementList, false, 0);\n     }\n \n     /**\n@@ -3636,6 +3635,7 @@\n \n         // index on index that the match was found\n         int textIndex \u003d -1;\n+\t\tchar ch \u003d 0;\n         int replaceIndex \u003d -1;\n         int tempIndex \u003d -1;\n \n@@ -3678,8 +3678,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3707,7 +3706,6 @@\n \n                 // see if we need to keep searching for this\n                 if (tempIndex \u003d\u003d -1) {\n-                    noMoreMatchesForReplIndex[i] \u003d true;\n                 } else {\n                     if (textIndex \u003d\u003d -1 || tempIndex \u003c textIndex) {\n                         textIndex \u003d tempIndex;"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":538,"generationNumber":79,"generationTime":41.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[434,448],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":539,"generationNumber":79,"generationTime":41.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3710,"end":3710}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"char ch\u003d0;\n","lineNumberRange":{"start":3638,"end":3638}},{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3683,"end":3683}}],"generatedSourceCode":{"isGenerationSuccess":true,"generationMessage":"Generate Success","productAsts":[],"testAsts":[],"pathToAst":{},"messageDigest":"d41d8cd98f00b204e9800998ecf8427e"},"selectionCount":0,"operation":{"parentIds":[485,448],"name":"random-crossover"},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":540,"generationNumber":80,"generationTime":108.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"insert_before","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"int increase\u003d0;\n","lineNumberRange":{"start":3615,"end":3615}},{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return splitByWholeSeparatorWorker(str,separator,max,true);\n","lineNumberRange":{"start":3696,"end":3696}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"62263465fd79cad44568a420e2c77b62"},"selectionCount":0,"operation":{"parentIds":[520],"name":"insert_after","appendBase":{"name":"insert_after","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"return splitByWholeSeparatorWorker(str,separator,max,true);\n","lineNumberRange":{"start":3696,"end":3696}}},"isSyntaxValid":true,"isBuildSuccess":false,"fitness":-1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3435,7 +3435,8 @@\n      */\n     public static String replace(String text, String searchString, String replacement, int max) {\n         if (isEmpty(text) || isEmpty(searchString) || replacement \u003d\u003d null || max \u003d\u003d 0) {\n-            return text;\n+            int increase \u003d 0;\n+\t\t\treturn text;\n         }\n         int start \u003d 0;\n         int end \u003d text.indexOf(searchString, start);\n@@ -3678,8 +3679,7 @@\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3694,7 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n+\t\t\treturn splitByWholeSeparatorWorker(str, separator, max, true);\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]},{"testResultsSingle":{},"fitnessSingle":{},"suspiciousnessListSingle":{},"id":541,"generationNumber":80,"generationTime":403.0,"bases":[{"name":"delete","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"","lineNumberRange":{"start":3695,"end":3695}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n","lineNumberRange":{"start":3682,"end":3682}},{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"start \u003c 0","lineNumberRange":{"start":3675,"end":3675}}],"generatedSourceCode":{"productAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"testAsts":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"pathToAst":{"src/java/org/apache/commons/lang3/mutable/MutableDouble.java":{},"src/java/org/apache/commons/lang3/text/StrBuilder.java":{},"src/java/org/apache/commons/lang3/SerializationException.java":{},"src/java/org/apache/commons/lang3/text/FormatFactory.java":{},"src/java/org/apache/commons/lang3/reflect/TypeUtils.java":{},"src/java/org/apache/commons/lang3/mutable/MutableObject.java":{},"src/java/org/apache/commons/lang3/text/StrLookup.java":{},"src/java/org/apache/commons/lang3/ArrayUtils.java":{},"src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java":{},"src/java/org/apache/commons/lang3/text/StrTokenizer.java":{},"src/java/org/apache/commons/lang3/builder/CompareToBuilder.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java":{},"src/java/org/apache/commons/lang3/mutable/MutableByte.java":{},"src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableFloat.java":{},"src/java/org/apache/commons/lang3/BitField.java":{},"src/java/org/apache/commons/lang3/EnumUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java":{},"src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/SystemUtils.java":{},"src/java/org/apache/commons/lang3/RandomStringUtils.java":{},"src/java/org/apache/commons/lang3/time/FastDateFormat.java":{},"src/java/org/apache/commons/lang3/exception/ContextedException.java":{},"src/java/org/apache/commons/lang3/mutable/MutableShort.java":{},"src/java/org/apache/commons/lang3/BooleanUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java":{},"src/java/org/apache/commons/lang3/time/DateUtils.java":{},"src/java/org/apache/commons/lang3/builder/ToStringBuilder.java":{},"src/java/org/apache/commons/lang3/time/DateFormatUtils.java":{},"src/java/org/apache/commons/lang3/reflect/MemberUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/mutable/Mutable.java":{},"src/java/org/apache/commons/lang3/mutable/MutableInt.java":{},"src/java/org/apache/commons/lang3/SerializationUtils.java":{},"src/java/org/apache/commons/lang3/Validate.java":{},"src/java/org/apache/commons/lang3/math/NumberUtils.java":{},"src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java":{},"src/java/org/apache/commons/lang3/CharRange.java":{},"src/java/org/apache/commons/lang3/StringUtils.java":{},"src/java/org/apache/commons/lang3/ObjectUtils.java":{},"src/java/org/apache/commons/lang3/LocaleUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java":{},"src/java/org/apache/commons/lang3/builder/IDKey.java":{},"src/java/org/apache/commons/lang3/CharUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java":{},"src/java/org/apache/commons/lang3/StringEscapeUtils.java":{},"src/java/org/apache/commons/lang3/time/StopWatch.java":{},"src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java":{},"src/java/org/apache/commons/lang3/text/StrMatcher.java":{},"src/java/org/apache/commons/lang3/reflect/MethodUtils.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionContext.java":{},"src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java":{},"src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java":{},"src/java/org/apache/commons/lang3/mutable/MutableBoolean.java":{},"src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java":{},"src/java/org/apache/commons/lang3/reflect/FieldUtils.java":{},"src/java/org/apache/commons/lang3/time/DurationFormatUtils.java":{},"src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java":{},"src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java":{},"src/java/org/apache/commons/lang3/WordUtils.java":{},"src/java/org/apache/commons/lang3/text/translate/EntityArrays.java":{},"src/java/org/apache/commons/lang3/exception/ExceptionUtils.java":{},"src/java/org/apache/commons/lang3/CharSet.java":{},"src/java/org/apache/commons/lang3/ClassUtils.java":{},"src/java/org/apache/commons/lang3/math/IEEE754rUtils.java":{},"src/java/org/apache/commons/lang3/Range.java":{},"src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java":{},"src/java/org/apache/commons/lang3/text/StrSubstitutor.java":{},"src/java/org/apache/commons/lang3/text/CompositeFormat.java":{},"src/java/org/apache/commons/lang3/mutable/MutableLong.java":{},"src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java":{},"src/java/org/apache/commons/lang3/builder/ToStringStyle.java":{},"src/java/org/apache/commons/lang3/CharSetUtils.java":{},"src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java":{},"src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java":{},"src/java/org/apache/commons/lang3/CharEncoding.java":{},"src/java/org/apache/commons/lang3/math/Fraction.java":{},"src/java/org/apache/commons/lang3/builder/EqualsBuilder.java":{}},"messageDigest":"67554271e6a76962ea50e23d1620f320"},"selectionCount":0,"operation":{"parentIds":[448],"name":"replace","appendBase":{"name":"replace","fileName":"src/java/org/apache/commons/lang3/StringUtils.java","snippet":"start \u003c 0","lineNumberRange":{"start":3675,"end":3675}}},"isSyntaxValid":true,"isBuildSuccess":true,"fitness":1.0,"patch":[{"fileName":"org.apache.commons.lang3.builder.CompareToBuilder","diff":"--- org.apache.commons.lang3.builder.CompareToBuilder\n+++ org.apache.commons.lang3.builder.CompareToBuilder\n@@ -1043,4 +1043,3 @@\n     }\n \n }\n-"},{"fileName":"org.apache.commons.lang3.StringUtils","diff":"--- org.apache.commons.lang3.StringUtils\n+++ org.apache.commons.lang3.StringUtils\n@@ -3672,14 +3672,13 @@\n         int increase \u003d 0;\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n-        for (int i \u003d 0; i \u003c searchList.length; i++) {\n+        for (int i \u003d 0; start \u003c 0; i++) {\n             int greater \u003d replacementList[i].length() - searchList[i].length();\n             if (greater \u003e 0) {\n                 increase +\u003d 3 * greater; // assume 3 matches\n             }\n         }\n-        // have upper-bound at 20% increase, then let Java take over\n-        increase \u003d Math.min(increase, text.length() / 5);\n+        List\u003cClass\u003c?\u003e\u003e classes\u003dnew ArrayList\u003cClass\u003c?\u003e\u003e();\n \n         StringBuilder buf \u003d new StringBuilder(text.length() + increase);\n \n@@ -3694,7 +3693,6 @@\n \n             textIndex \u003d -1;\n             replaceIndex \u003d -1;\n-            tempIndex \u003d -1;\n             // find the next earliest match\n             // NOTE: logic mostly duplicated above START\n             for (int i \u003d 0; i \u003c searchLength; i++) {"}]}],"configuration":{"targetProject":{"rootPath":".","productSourcePaths":["src/java/org/apache/commons/lang3/mutable/MutableDouble.java","src/java/org/apache/commons/lang3/text/StrBuilder.java","src/java/org/apache/commons/lang3/SerializationException.java","src/java/org/apache/commons/lang3/text/FormatFactory.java","src/java/org/apache/commons/lang3/reflect/TypeUtils.java","src/java/org/apache/commons/lang3/mutable/MutableObject.java","src/java/org/apache/commons/lang3/text/StrLookup.java","src/java/org/apache/commons/lang3/ArrayUtils.java","src/java/org/apache/commons/lang3/reflect/ConstructorUtils.java","src/java/org/apache/commons/lang3/text/StrTokenizer.java","src/java/org/apache/commons/lang3/builder/CompareToBuilder.java","src/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java","src/java/org/apache/commons/lang3/mutable/MutableByte.java","src/java/org/apache/commons/lang3/exception/ContextedRuntimeException.java","src/java/org/apache/commons/lang3/mutable/MutableFloat.java","src/java/org/apache/commons/lang3/BitField.java","src/java/org/apache/commons/lang3/EnumUtils.java","src/java/org/apache/commons/lang3/text/translate/NumericEntityEscaper.java","src/java/org/apache/commons/lang3/concurrent/MultiBackgroundInitializer.java","src/java/org/apache/commons/lang3/SystemUtils.java","src/java/org/apache/commons/lang3/RandomStringUtils.java","src/java/org/apache/commons/lang3/time/FastDateFormat.java","src/java/org/apache/commons/lang3/exception/ContextedException.java","src/java/org/apache/commons/lang3/mutable/MutableShort.java","src/java/org/apache/commons/lang3/BooleanUtils.java","src/java/org/apache/commons/lang3/concurrent/ConcurrentException.java","src/java/org/apache/commons/lang3/time/DateUtils.java","src/java/org/apache/commons/lang3/builder/ToStringBuilder.java","src/java/org/apache/commons/lang3/time/DateFormatUtils.java","src/java/org/apache/commons/lang3/reflect/MemberUtils.java","src/java/org/apache/commons/lang3/concurrent/BackgroundInitializer.java","src/java/org/apache/commons/lang3/mutable/Mutable.java","src/java/org/apache/commons/lang3/mutable/MutableInt.java","src/java/org/apache/commons/lang3/SerializationUtils.java","src/java/org/apache/commons/lang3/Validate.java","src/java/org/apache/commons/lang3/math/NumberUtils.java","src/java/org/apache/commons/lang3/exception/DefaultExceptionContext.java","src/java/org/apache/commons/lang3/CharRange.java","src/java/org/apache/commons/lang3/StringUtils.java","src/java/org/apache/commons/lang3/ObjectUtils.java","src/java/org/apache/commons/lang3/LocaleUtils.java","src/java/org/apache/commons/lang3/text/translate/UnicodeEscaper.java","src/java/org/apache/commons/lang3/builder/IDKey.java","src/java/org/apache/commons/lang3/CharUtils.java","src/java/org/apache/commons/lang3/text/translate/UnicodeUnescaper.java","src/java/org/apache/commons/lang3/StringEscapeUtils.java","src/java/org/apache/commons/lang3/time/StopWatch.java","src/java/org/apache/commons/lang3/builder/ReflectionToStringBuilder.java","src/java/org/apache/commons/lang3/text/StrMatcher.java","src/java/org/apache/commons/lang3/reflect/MethodUtils.java","src/java/org/apache/commons/lang3/exception/ExceptionContext.java","src/java/org/apache/commons/lang3/text/translate/AggregateTranslator.java","src/java/org/apache/commons/lang3/concurrent/ConcurrentUtils.java","src/java/org/apache/commons/lang3/text/translate/LookupTranslator.java","src/java/org/apache/commons/lang3/mutable/MutableBoolean.java","src/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java","src/java/org/apache/commons/lang3/reflect/FieldUtils.java","src/java/org/apache/commons/lang3/time/DurationFormatUtils.java","src/java/org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.java","src/java/org/apache/commons/lang3/builder/StandardToStringStyle.java","src/java/org/apache/commons/lang3/WordUtils.java","src/java/org/apache/commons/lang3/text/translate/EntityArrays.java","src/java/org/apache/commons/lang3/exception/ExceptionUtils.java","src/java/org/apache/commons/lang3/CharSet.java","src/java/org/apache/commons/lang3/ClassUtils.java","src/java/org/apache/commons/lang3/math/IEEE754rUtils.java","src/java/org/apache/commons/lang3/Range.java","src/java/org/apache/commons/lang3/concurrent/LazyInitializer.java","src/java/org/apache/commons/lang3/text/StrSubstitutor.java","src/java/org/apache/commons/lang3/text/CompositeFormat.java","src/java/org/apache/commons/lang3/mutable/MutableLong.java","src/java/org/apache/commons/lang3/text/translate/CodePointTranslator.java","src/java/org/apache/commons/lang3/builder/ToStringStyle.java","src/java/org/apache/commons/lang3/CharSetUtils.java","src/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java","src/java/org/apache/commons/lang3/builder/HashCodeBuilder.java","src/java/org/apache/commons/lang3/CharEncoding.java","src/java/org/apache/commons/lang3/math/Fraction.java","src/java/org/apache/commons/lang3/builder/EqualsBuilder.java"],"testSourcePaths":["src/test/org/apache/commons/lang3/ArrayUtilsAddTest.java","src/test/org/apache/commons/lang3/concurrent/BackgroundInitializerTest.java","src/test/org/apache/commons/lang3/text/StrTokenizerTest.java","src/test/org/apache/commons/lang3/StringUtilsEqualsIndexOfTest.java","src/test/org/apache/commons/lang3/CharSetUtilsTest.java","src/test/org/apache/commons/lang3/ObjectUtilsTest.java","src/test/org/apache/commons/lang3/StringUtilsStartsEndsWithTest.java","src/test/org/apache/commons/lang3/WordUtilsTest.java","src/test/org/apache/commons/lang3/mutable/MutableShortTest.java","src/test/org/apache/commons/lang3/builder/CompareToBuilderTest.java","src/test/org/apache/commons/lang3/CharUtilsTest.java","src/test/org/apache/commons/lang3/SerializationUtilsTest.java","src/test/org/apache/commons/lang3/CharUtilsPerfRun.java","src/test/org/apache/commons/lang3/reflect/testbed/StaticContainer.java","src/test/org/apache/commons/lang3/SystemUtilsTest.java","src/test/org/apache/commons/lang3/reflect/testbed/StaticContainerChild.java","src/test/org/apache/commons/lang3/builder/DefaultToStringStyleTest.java","src/test/org/apache/commons/lang3/time/DateUtilsFragmentTest.java","src/test/org/apache/commons/lang3/RangeTest.java","src/test/org/apache/commons/lang3/builder/MultiLineToStringStyleTest.java","src/test/org/apache/commons/lang3/builder/ToStringBuilderTest.java","src/test/org/apache/commons/lang3/reflect/testbed/Parent.java","src/test/org/apache/commons/lang3/ClassUtilsTest.java","src/test/org/apache/commons/lang3/CharSetTest.java","src/test/org/apache/commons/lang3/mutable/MutableLongTest.java","src/test/org/apache/commons/lang3/reflect/MethodUtilsTest.java","src/test/org/apache/commons/lang3/reflect/testbed/PrivatelyShadowedChild.java","src/test/org/apache/commons/lang3/BitFieldTest.java","src/test/org/apache/commons/lang3/builder/SimpleToStringStyleTest.java","src/test/org/apache/commons/lang3/BooleanUtilsTest.java","src/test/org/apache/commons/lang3/builder/NoFieldNamesToStringStyleTest.java","src/test/org/apache/commons/lang3/builder/ToStringStyleTest.java","src/test/org/apache/commons/lang3/exception/DefaultExceptionContextTest.java","src/test/org/apache/commons/lang3/mutable/MutableByteTest.java","src/test/org/apache/commons/lang3/concurrent/CallableBackgroundInitializerTest.java","src/test/org/apache/commons/lang3/concurrent/LazyInitializerTest.java","src/test/org/apache/commons/lang3/time/DateUtilsRoundingTest.java","src/test/org/apache/commons/lang3/builder/StandardToStringStyleTest.java","src/test/org/apache/commons/lang3/ArrayUtilsRemoveTest.java","src/test/org/apache/commons/lang3/mutable/MutableIntTest.java","src/test/org/apache/commons/lang3/text/translate/EntityArraysTest.java","src/test/org/apache/commons/lang3/reflect/testbed/Foo.java","src/test/org/apache/commons/lang3/exception/ExceptionUtilsTest.java","src/test/org/apache/commons/lang3/reflect/testbed/GenericParent.java","src/test/org/apache/commons/lang3/CharEncodingTest.java","src/test/org/apache/commons/lang3/time/StopWatchTest.java","src/test/org/apache/commons/lang3/text/translate/UnicodeEscaperTest.java","src/test/org/apache/commons/lang3/text/translate/NumericEntityEscaperTest.java","src/test/org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java","src/test/org/apache/commons/lang3/math/NumberUtilsTest.java","src/test/org/apache/commons/lang3/text/ExtendedMessageFormatTest.java","src/test/org/apache/commons/lang3/reflect/testbed/Bar.java","src/test/org/apache/commons/lang3/LocaleUtilsTest.java","src/test/org/apache/commons/lang3/time/DateFormatUtilsTest.java","src/test/org/apache/commons/lang3/time/DateUtilsTest.java","src/test/org/apache/commons/lang3/builder/HashCodeBuilderTest.java","src/test/org/apache/commons/lang3/exception/ContextedExceptionTest.java","src/test/org/apache/commons/lang3/StringEscapeUtilsTest.java","src/test/org/apache/commons/lang3/reflect/testbed/StringParameterizedChild.java","src/test/org/apache/commons/lang3/mutable/MutableDoubleTest.java","src/test/org/apache/commons/lang3/StringUtilsTest.java","src/test/org/apache/commons/lang3/mutable/MutableFloatTest.java","src/test/org/apache/commons/lang3/math/FractionTest.java","src/test/org/apache/commons/lang3/time/FastDateFormatTest.java","src/test/org/apache/commons/lang3/reflect/TypeUtilsTest.java","src/test/org/apache/commons/lang3/reflect/testbed/GenericTypeHolder.java","src/test/org/apache/commons/lang3/text/StrBuilderTest.java","src/test/org/apache/commons/lang3/text/CompositeFormatTest.java","src/test/org/apache/commons/lang3/ArrayUtilsTest.java","src/test/org/apache/commons/lang3/text/translate/UnicodeUnescaperTest.java","src/test/org/apache/commons/lang3/StringUtilsSubstringTest.java","src/test/org/apache/commons/lang3/builder/ShortPrefixToStringStyleTest.java","src/test/org/apache/commons/lang3/concurrent/MultiBackgroundInitializerTest.java","src/test/org/apache/commons/lang3/math/IEEE754rUtilsTest.java","src/test/org/apache/commons/lang3/EnumUtilsTest.java","src/test/org/apache/commons/lang3/mutable/MutableBooleanTest.java","src/test/org/apache/commons/lang3/text/StrLookupTest.java","src/test/org/apache/commons/lang3/text/StrMatcherTest.java","src/test/org/apache/commons/lang3/builder/EqualsBuilderTest.java","src/test/org/apache/commons/lang3/text/translate/LookupTranslatorTest.java","src/test/org/apache/commons/lang3/text/StrSubstitutorTest.java","src/test/org/apache/commons/lang3/reflect/testbed/PubliclyShadowedChild.java","src/test/org/apache/commons/lang3/reflect/testbed/PublicChild.java","src/test/org/apache/commons/lang3/reflect/testbed/Ambig.java","src/test/org/apache/commons/lang3/ValidateTest.java","src/test/org/apache/commons/lang3/RandomStringUtilsTest.java","src/test/org/apache/commons/lang3/mutable/MutableObjectTest.java","src/test/org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java","src/test/org/apache/commons/lang3/StringUtilsTrimEmptyTest.java","src/test/org/apache/commons/lang3/builder/ReflectionToStringBuilderExcludeTest.java","src/test/org/apache/commons/lang3/StringUtilsIsTest.java","src/test/org/apache/commons/lang3/reflect/FieldUtilsTest.java","src/test/org/apache/commons/lang3/reflect/ConstructorUtilsTest.java","src/test/org/apache/commons/lang3/time/DurationFormatUtilsTest.java","src/test/org/apache/commons/lang3/CharRangeTest.java","src/test/org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java","src/test/org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java"],"classPaths":[{"path":"/kGenProg/defects4j/commons-discovery-0.5.jar"},{"path":"/kGenProg/defects4j/easymock-5.1.0.jar"},{"path":"/kGenProg/defects4j/commons-io-2.11.0.jar"},{"path":"/kGenProg/defects4j/hamcrest-2.2.jar"},{"path":"/tmp/kgp-8786913267327978365/junit-4.12-kgp-custom.jar"}]},"executionTests":["org.apache.commons.lang3.StringUtilsTest"],"outDir":"out2","mutationGeneratingCount":5,"crossoverGeneratingCount":2,"headcount":5,"maxGeneration":100,"timeLimit":{"seconds":3600,"nanos":0},"testTimeLimit":{"seconds":40,"nanos":0},"requiredSolutionsCount":1,"logLevel":{"levelInt":20000,"levelStr":"INFO"},"randomSeed":2,"scope":"PACKAGE","faultLocalization":"Ochiai","mutationType":"Simple","crossoverType":"Random","firstVariantSelectionStrategy":"Random","secondVariantSelectionStrategy":"Random","isPatchOutput":false,"isHistoryRecord":true,"builder":{"configPath":"kgenprog.toml","rootDir":".","productPaths":["src/java"],"testPaths":["src/test"],"classPaths":["/kGenProg/defects4j/commons-discovery-0.5.jar","/kGenProg/defects4j/easymock-5.1.0.jar","/kGenProg/defects4j/commons-io-2.11.0.jar","/kGenProg/defects4j/hamcrest-2.2.jar"],"executionTests":["org.apache.commons.lang3.StringUtilsTest"],"outDir":"out2","logLevel":{"levelInt":20000,"levelStr":"INFO"},"mutationGeneratingCount":5,"crossoverGeneratingCount":2,"headcount":5,"maxGeneration":100,"timeLimit":{"seconds":3600,"nanos":0},"testTimeLimit":{"seconds":40,"nanos":0},"requiredSolutionsCount":1,"randomSeed":2,"scope":"PACKAGE","faultLocalization":"Ochiai","mutationType":"Simple","crossoverType":"Random","firstVariantSelectionStrategy":"Random","secondVariantSelectionStrategy":"Random","isPatchOutput":false,"isHistoryRecord":true}}}